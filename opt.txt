[33m0% [Working][0m[33m0% [Connecting to ports.ubuntu.com (185.125.190.36)][0m                                                    Get:1 http://ports.ubuntu.com/ubuntu-ports noble InRelease [256 kB]
[33m                                                    0% [1 InRelease 8020 B/256 kB 3%][0m[33m0% [1 InRelease 49.7 kB/256 kB 19%][0m[33m                                   0% [1 InRelease 187 kB/256 kB 73%][0m[33m                                  0% [Working][0m            Get:2 http://ports.ubuntu.com/ubuntu-ports noble-updates InRelease [126 kB]
[33m0% [2 InRelease 2468 B/126 kB 2%][0m[33m                                 0% [Working][0m[33m0% [Waiting for headers][0m                        Get:3 http://ports.ubuntu.com/ubuntu-ports noble-backports InRelease [126 kB]
[33m0% [3 InRelease 1080 B/126 kB 1%][0m[33m                                 0% [Working][0m            Get:4 http://ports.ubuntu.com/ubuntu-ports noble-security InRelease [126 kB]
[33m0% [4 InRelease 5244 B/126 kB 4%][0m[33m0% [4 InRelease 116 kB/126 kB 92%][0m[33m                                  0% [Working][0m            Get:5 http://ports.ubuntu.com/ubuntu-ports noble/multiverse riscv64 Packages [204 kB]
[33m0% [5 Packages 8089 B/204 kB 4%][0m[33m0% [5 Packages 202 kB/204 kB 99%][0m[33m                                 0% [Working][0m            Get:6 http://ports.ubuntu.com/ubuntu-ports noble/restricted riscv64 Packages [3482 B]
            Get:7 http://ports.ubuntu.com/ubuntu-ports noble/main riscv64 Packages [1700 kB]
[33m0% [7 Packages 47.0 kB/1700 kB 3%][0m[33m0% [5 Packages store 0 B] [7 Packages 60.8 kB/1700 kB 4%][0m[33m                                                         0% [7 Packages 114 kB/1700 kB 7%][0m[33m0% [6 Packages store 0 B] [7 Packages 114 kB/1700 kB 7%][0m[33m                                                        0% [7 Packages 116 kB/1700 kB 7%][0m[33m19% [7 Packages 734 kB/1700 kB 43%][0m[33m                                   22% [Working][0m             Get:8 http://ports.ubuntu.com/ubuntu-ports noble/universe riscv64 Packages [18.3 MB]
[33m22% [8 Packages 10.0 kB/18.3 MB 0%][0m[33m22% [7 Packages store 0 B] [8 Packages 10.0 kB/18.3 MB 0%][0m[33m                                                          29% [8 Packages 1751 kB/18.3 MB 10%][0m[33m44% [8 Packages 6225 kB/18.3 MB 34%][0m[33m48% [8 Packages 7327 kB/18.3 MB 40%][0m[33m58% [8 Packages 10.4 MB/18.3 MB 57%][0m[33m63% [8 Packages 11.9 MB/18.3 MB 65%]                                                                       2251 kB/s 4s[0m[33m75% [8 Packages 15.5 MB/18.3 MB 85%]                                                                       2251 kB/s 2s[0m[33m79% [8 Packages 16.6 MB/18.3 MB 91%]                                                                       2251 kB/s 2s[0m                                                                                                                       Get:9 http://ports.ubuntu.com/ubuntu-ports noble-updates/restricted riscv64 Packages [3593 B]
                                                                                                                       Get:10 http://ports.ubuntu.com/ubuntu-ports noble-updates/multiverse riscv64 Packages [1891 B]
                                                                                                                       Get:11 http://ports.ubuntu.com/ubuntu-ports noble-updates/universe riscv64 Packages [1064 kB]
[33m85% [11 Packages 109 kB/1064 kB 10%]                                                                       2251 kB/s 1s[0m[33m85% [8 Packages store 0 B] [11 Packages 109 kB/1064 kB 10%]                                                2251 kB/s 1s[0m[33m88% [8 Packages store 0 B]                                                                                 2251 kB/s 0s[0m[33m88% [8 Packages store 0 B] [Waiting for headers]                                                           2251 kB/s 0s[0m                                                                                                                       Get:12 http://ports.ubuntu.com/ubuntu-ports noble-updates/main riscv64 Packages [674 kB]
[33m88% [8 Packages store 0 B] [12 Packages 2537 B/674 kB 0%]                                                  2251 kB/s 0s[0m[33m88% [8 Packages store 0 B] [12 Packages 41.4 kB/674 kB 6%]                                                 2251 kB/s 0s[0m[33m89% [8 Packages store 0 B] [12 Packages 115 kB/674 kB 17%]                                                 2251 kB/s 0s[0m[33m89% [8 Packages store 0 B] [12 Packages 344 kB/674 kB 51%]                                                 2251 kB/s 0s[0m[33m90% [12 Packages 533 kB/674 kB 79%]                                                                        2251 kB/s 0s[0m[33m90% [9 Packages store 0 B] [12 Packages 533 kB/674 kB 79%]                                                 2251 kB/s 0s[0m[33m91% [12 Packages 533 kB/674 kB 79%]                                                                        2251 kB/s 0s[0m[33m91% [10 Packages store 0 B] [12 Packages 533 kB/674 kB 79%]                                                2251 kB/s 0s[0m[33m92% [12 Packages 536 kB/674 kB 80%]                                                                        2251 kB/s 0s[0m[33m92% [11 Packages store 0 B] [12 Packages 536 kB/674 kB 80%]                                                2251 kB/s 0s[0m[33m92% [11 Packages store 0 B]                                                                                2251 kB/s 0s[0m[33m93% [Waiting for headers]                                                                                  2251 kB/s 0s[0m[33m93% [12 Packages store 0 B] [Waiting for headers]                                                          2251 kB/s 0s[0m[33m93% [Waiting for headers]                                                                                  2251 kB/s 0s[0m                                                                                                                       Get:13 http://ports.ubuntu.com/ubuntu-ports noble-backports/universe riscv64 Packages [14.3 kB]
[33m93% [13 Packages 13.6 kB/14.3 kB 95%]                                                                      2251 kB/s 0s[0m[33m93% [Working]                                                                                              2251 kB/s 0s[0m                                                                                                                       Get:14 http://ports.ubuntu.com/ubuntu-ports noble-security/multiverse riscv64 Packages [1079 B]
[33m93% [Waiting for headers]                                                                                  2251 kB/s 0s[0m                                                                                                                       Get:15 http://ports.ubuntu.com/ubuntu-ports noble-security/universe riscv64 Packages [807 kB]
[33m93% [13 Packages store 0 B] [15 Packages 3299 B/807 kB 0%]                                                 2251 kB/s 0s[0m[33m94% [15 Packages 8851 B/807 kB 1%]                                                                         2251 kB/s 0s[0m[33m94% [14 Packages store 0 B] [15 Packages 11.6 kB/807 kB 1%]                                                2251 kB/s 0s[0m[33m94% [15 Packages 14.4 kB/807 kB 2%]                                                                        2251 kB/s 0s[0m[33m96% [15 Packages 514 kB/807 kB 64%]                                                                        2251 kB/s 0s[0m[33m97% [Working]                                                                                              2251 kB/s 0s[0m                                                                                                                       Get:16 http://ports.ubuntu.com/ubuntu-ports noble-security/restricted riscv64 Packages [3378 B]
[33m97% [Waiting for headers]                                                                                  2251 kB/s 0s[0m                                                                                                                       Get:17 http://ports.ubuntu.com/ubuntu-ports noble-security/main riscv64 Packages [372 kB]
[33m97% [15 Packages store 0 B] [17 Packages 436 B/372 kB 0%]                                                  2251 kB/s 0s[0m[33m98% [17 Packages 32.8 kB/372 kB 9%]                                                                        2251 kB/s 0s[0m[33m98% [16 Packages store 0 B] [17 Packages 32.8 kB/372 kB 9%]                                                2251 kB/s 0s[0m[33m98% [17 Packages 32.8 kB/372 kB 9%]                                                                        2251 kB/s 0s[0m[33m99% [Working]                                                                                              2251 kB/s 0s[0m[33m99% [17 Packages store 0 B]                                                                                2251 kB/s 0s[0m[33m100% [Working]                                                                                             2251 kB/s 0s[0m                                                                                                                       Fetched 23.8 MB in 11s (2128 kB/s)
Reading package lists... 0%Reading package lists... 0%Reading package lists... 0%Reading package lists... 7%Reading package lists... 7%Reading package lists... 22%Reading package lists... 58%Reading package lists... 84%Reading package lists... 84%Reading package lists... 84%Reading package lists... 84%Reading package lists... 85%Reading package lists... 85%Reading package lists... 88%Reading package lists... 88%Reading package lists... 93%Reading package lists... 93%Reading package lists... 93%Reading package lists... 93%Reading package lists... 93%Reading package lists... 93%Reading package lists... 93%Reading package lists... 93%Reading package lists... 95%Reading package lists... 95%Reading package lists... 96%Reading package lists... 99%Reading package lists... 99%Reading package lists... 99%Reading package lists... 99%Reading package lists... 99%Reading package lists... 99%Reading package lists... Done
Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 50%Building dependency tree... 50%Building dependency tree... Done
Reading state information... 0% Reading state information... 98%Reading state information... Done
18 packages can be upgraded. Run 'apt list --upgradable' to see them.
Reading package lists... 0%Reading package lists... 0%Reading package lists... 0%Reading package lists... 7%Reading package lists... 7%Reading package lists... 23%Reading package lists... 61%Reading package lists... 84%Reading package lists... 84%Reading package lists... 84%Reading package lists... 84%Reading package lists... 85%Reading package lists... 85%Reading package lists... 88%Reading package lists... 88%Reading package lists... 93%Reading package lists... 93%Reading package lists... 93%Reading package lists... 93%Reading package lists... 93%Reading package lists... 93%Reading package lists... 93%Reading package lists... 93%Reading package lists... 95%Reading package lists... 95%Reading package lists... 99%Reading package lists... 99%Reading package lists... 99%Reading package lists... 99%Reading package lists... 99%Reading package lists... 99%Reading package lists... Done
Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 50%Building dependency tree... 50%Building dependency tree... Done
Reading state information... 0% Reading state information... 98%Reading state information... Done
The following additional packages will be installed:
  fontconfig-config fonts-dejavu-core fonts-dejavu-mono icu-devtools libaom3 libbrotli1 libbsd0 libc-bin libc-dev-bin
  libc-devtools libc6 libc6-dev libcrypt-dev libde265-0 libdeflate0 libexpat1 libfontconfig1 libfreetype6 libgd3
  libheif-plugin-aomdec libheif-plugin-aomenc libheif-plugin-libde265 libheif1 libicu74 libjbig0 libjpeg-turbo8
  libjpeg8 liblerc4 libpng16-16t64 libsharpyuv0 libtiff6 libwebp7 libx11-6 libx11-data libxau6 libxcb1 libxdmcp6
  libxpm4 linux-libc-dev manpages manpages-dev rpcsvc-proto
Suggested packages:
  glibc-doc locales libnss-nis libnss-nisplus libgd-tools libheif-plugin-x265 libheif-plugin-ffmpegdec
  libheif-plugin-jpegdec libheif-plugin-jpegenc libheif-plugin-j2kdec libheif-plugin-j2kenc libheif-plugin-rav1e
  libheif-plugin-svtenc icu-doc man-browser
The following NEW packages will be installed:
  fontconfig-config fonts-dejavu-core fonts-dejavu-mono icu-devtools libaom3 libbrotli1 libbsd0 libc-dev-bin
  libc-devtools libc6-dev libcrypt-dev libde265-0 libdeflate0 libexpat1 libfontconfig1 libfreetype6 libgd3
  libheif-plugin-aomdec libheif-plugin-aomenc libheif-plugin-libde265 libheif1 libicu-dev libicu74 libjbig0
  libjpeg-turbo8 libjpeg8 liblerc4 libpng16-16t64 libsharpyuv0 libtiff6 libwebp7 libx11-6 libx11-data libxau6 libxcb1
  libxdmcp6 libxpm4 linux-libc-dev manpages manpages-dev rpcsvc-proto
The following packages will be upgraded:
  libc-bin libc6
2 upgraded, 41 newly installed, 0 to remove and 16 not upgraded.
Need to get 47.2 MB of archives.
After this operation, 193 MB of additional disk space will be used.
[33m0% [Working][0m[33m0% [Waiting for headers][0m                        Get:1 http://ports.ubuntu.com/ubuntu-ports noble-updates/main riscv64 libc6 riscv64 2.39-0ubuntu8.4 [2778 kB]
[33m0% [1 libc6 1103 B/2778 kB 0%][0m[33m0% [1 libc6 41.4 kB/2778 kB 1%][0m	[33m0% [1 libc6 99.7 kB/2778 kB 4%][0m[33m0% [1 libc6 279 kB/2778 kB 10%][0m[33m1% [1 libc6 878 kB/2778 kB 32%][0m[33m                               5% [Working][0m            Get:2 http://ports.ubuntu.com/ubuntu-ports noble-updates/main riscv64 libc-bin riscv64 2.39-0ubuntu8.4 [609 kB]
[33m5% [2 libc-bin 30.3 kB/609 kB 5%][0m[33m                                 7% [Working][0m            Get:3 http://ports.ubuntu.com/ubuntu-ports noble-updates/main riscv64 libbsd0 riscv64 0.12.1-1build1.1 [43.9 kB]
[33m7% [3 libbsd0 6944 B/43.9 kB 16%][0m[33m                                 7% [Working][0m            Get:4 http://ports.ubuntu.com/ubuntu-ports noble-updates/main riscv64 libexpat1 riscv64 2.6.1-2ubuntu0.2 [86.3 kB]
[33m7% [4 libexpat1 6864 B/86.3 kB 8%][0m[33m                                  8% [Working][0m            Get:5 http://ports.ubuntu.com/ubuntu-ports noble-updates/main riscv64 libicu74 riscv64 74.2-1ubuntu3.1 [10.9 MB]
[33m8% [5 libicu74 6340 B/10.9 MB 0%][0m[33m10% [5 libicu74 1178 kB/10.9 MB 11%][0m[33m16% [5 libicu74 4896 kB/10.9 MB 45%][0m[33m20% [5 libicu74 7203 kB/10.9 MB 66%][0m[33m                                    27% [Working][0m             Get:6 http://ports.ubuntu.com/ubuntu-ports noble/main riscv64 libpng16-16t64 riscv64 1.6.43-5build1 [193 kB]
[33m27% [6 libpng16-16t64 53.9 kB/193 kB 28%][0m[33m28% [Working]                                                                                             2372 kB/s 13s[0m                                                                                                                       Get:7 http://ports.ubuntu.com/ubuntu-ports noble/main riscv64 libxau6 riscv64 1:1.0.9-1build6 [7318 B]
[33m28% [Waiting for headers]                                                                                 2372 kB/s 13s[0m                                                                                                                       Get:8 http://ports.ubuntu.com/ubuntu-ports noble/main riscv64 libxdmcp6 riscv64 1:1.1.3-0ubuntu6 [11.0 kB]
[33m28% [8 libxdmcp6 11.0 kB/11.0 kB 100%]                                                                    2372 kB/s 13s[0m[33m29% [Working]                                                                                             2372 kB/s 13s[0m                                                                                                                       Get:9 http://ports.ubuntu.com/ubuntu-ports noble/main riscv64 libxcb1 riscv64 1.15-1ubuntu2 [52.7 kB]
[33m29% [9 libxcb1 9435 B/52.7 kB 18%]                                                                        2372 kB/s 13s[0m[33m29% [Working]                                                                                             2372 kB/s 13s[0m                                                                                                                       Get:10 http://ports.ubuntu.com/ubuntu-ports noble/main riscv64 libx11-data all 2:1.8.7-1build1 [115 kB]
[33m29% [10 libx11-data 37.0 kB/115 kB 32%]                                                                   2372 kB/s 13s[0m[33m30% [Working]                                                                                             2372 kB/s 13s[0m                                                                                                                       Get:11 http://ports.ubuntu.com/ubuntu-ports noble/main riscv64 libx11-6 riscv64 2:1.8.7-1build1 [677 kB]
[33m30% [11 libx11-6 6764 B/677 kB 1%]                                                                        2372 kB/s 13s[0m[33m31% [Working]                                                                                             2372 kB/s 13s[0m[33m31% [Waiting for headers]                                                                                 2372 kB/s 13s[0m                                                                                                                       Get:12 http://ports.ubuntu.com/ubuntu-ports noble/main riscv64 manpages all 6.7-2 [1384 kB]
[33m31% [12 manpages 5267 B/1384 kB 0%]                                                                       2372 kB/s 13s[0m[33m31% [12 manpages 41.4 kB/1384 kB 3%]                                                                      2372 kB/s 13s[0m[33m32% [12 manpages 129 kB/1384 kB 9%]                                                                       2372 kB/s 13s[0m[33m32% [12 manpages 554 kB/1384 kB 40%]                                                                      2372 kB/s 13s[0m[33m34% [Working]                                                                                             2372 kB/s 12s[0m                                                                                                                       Get:13 http://ports.ubuntu.com/ubuntu-ports noble/main riscv64 fonts-dejavu-mono all 2.37-8 [502 kB]
[33m34% [13 fonts-dejavu-mono 16.4 kB/502 kB 3%]                                                              2372 kB/s 12s[0m[33m35% [Working]                                                                                             2372 kB/s 12s[0m                                                                                                                       Get:14 http://ports.ubuntu.com/ubuntu-ports noble/main riscv64 fonts-dejavu-core all 2.37-8 [835 kB]
[33m35% [14 fonts-dejavu-core 12.2 kB/835 kB 1%]                                                              2372 kB/s 12s[0m[33m37% [Working]                                                                                             2372 kB/s 12s[0m                                                                                                                       Get:15 http://ports.ubuntu.com/ubuntu-ports noble/main riscv64 fontconfig-config riscv64 2.15.0-1.1ubuntu2 [37.4 kB]
[33m37% [15 fontconfig-config 4164 B/37.4 kB 11%]                                                             2372 kB/s 12s[0m[33m38% [Working]                                                                                             2372 kB/s 12s[0m                                                                                                                       Get:16 http://ports.ubuntu.com/ubuntu-ports noble-updates/main riscv64 icu-devtools riscv64 74.2-1ubuntu3.1 [225 kB]
[33m38% [16 icu-devtools 5343 B/225 kB 2%]                                                                    2372 kB/s 12s[0m[33m39% [Working]                                                                                             2372 kB/s 12s[0m                                                                                                                       Get:17 http://ports.ubuntu.com/ubuntu-ports noble-updates/main riscv64 libaom3 riscv64 3.8.2-2ubuntu0.1 [1439 kB]
[33m39% [17 libaom3 13.6 kB/1439 kB 1%]                                                                       2372 kB/s 12s[0m[33m41% [17 libaom3 1356 kB/1439 kB 94%]                                                                      2372 kB/s 11s[0m[33m42% [Working]                                                                                             2372 kB/s 11s[0m                                                                                                                       Get:18 http://ports.ubuntu.com/ubuntu-ports noble/main riscv64 libbrotli1 riscv64 1.1.0-2build2 [389 kB]
[33m42% [18 libbrotli1 0 B/389 kB 0%]                                                                         2372 kB/s 11s[0m[33m43% [Working]                                                                                             2372 kB/s 11s[0m                                                                                                                       Get:19 http://ports.ubuntu.com/ubuntu-ports noble-updates/main riscv64 libc-dev-bin riscv64 2.39-0ubuntu8.4 [20.0 kB]
[33m43% [19 libc-dev-bin 7589 B/20.0 kB 38%]                                                                  2372 kB/s 11s[0m[33m43% [Working]                                                                                             2372 kB/s 11s[0m                                                                                                                       Get:20 http://ports.ubuntu.com/ubuntu-ports noble/main riscv64 libfreetype6 riscv64 2.13.2+dfsg-1build3 [430 kB]
[33m43% [20 libfreetype6 3998 B/430 kB 1%]                                                                    2372 kB/s 11s[0m[33m44% [Working]                                                                                             2372 kB/s 11s[0m                                                                                                                       Get:21 http://ports.ubuntu.com/ubuntu-ports noble/main riscv64 libfontconfig1 riscv64 2.15.0-1.1ubuntu2 [145 kB]
[33m44% [21 libfontconfig1 5235 B/145 kB 4%]                                                                  2372 kB/s 11s[0m[33m45% [Working]                                                                                             2372 kB/s 11s[0m                                                                                                                       Get:22 http://ports.ubuntu.com/ubuntu-ports noble/main riscv64 libsharpyuv0 riscv64 1.3.2-0.4build3 [14.9 kB]
[33m45% [22 libsharpyuv0 8671 B/14.9 kB 58%]                                                                  2372 kB/s 11s[0m[33m46% [Working]                                                                                             2372 kB/s 11s[0m                                                                                                                       Get:23 http://ports.ubuntu.com/ubuntu-ports noble-updates/main riscv64 libheif-plugin-aomdec riscv64 1.17.6-1ubuntu4.1 [10.4 kB]
[33m46% [23 libheif-plugin-aomdec 10.4 kB/10.4 kB 100%]                                                       2372 kB/s 11s[0m[33m46% [Working]                                                                                             2372 kB/s 11s[0m                                                                                                                       Get:24 http://ports.ubuntu.com/ubuntu-ports noble/main riscv64 libde265-0 riscv64 1.0.15-1build3 [191 kB]
[33m46% [24 libde265-0 2493 B/191 kB 1%]                                                                      2372 kB/s 11s[0m[33m46% [24 libde265-0 78.8 kB/191 kB 41%]                                                                     989 kB/s 26s[0m[33m47% [Working]                                                                                              989 kB/s 26s[0m                                                                                                                       Get:25 http://ports.ubuntu.com/ubuntu-ports noble-updates/main riscv64 libheif-plugin-libde265 riscv64 1.17.6-1ubuntu4.1 [11.2 kB]
[33m47% [25 libheif-plugin-libde265 1680 B/11.2 kB 15%]                                                        989 kB/s 26s[0m[33m47% [Working]                                                                                              989 kB/s 26s[0m                                                                                                                       Get:26 http://ports.ubuntu.com/ubuntu-ports noble-updates/main riscv64 libheif1 riscv64 1.17.6-1ubuntu4.1 [306 kB]
[33m47% [26 libheif1 1345 B/306 kB 0%]                                                                         989 kB/s 26s[0m[33m48% [Working]                                                                                              989 kB/s 26s[0m                                                                                                                       Get:27 http://ports.ubuntu.com/ubuntu-ports noble/main riscv64 libjpeg-turbo8 riscv64 2.1.5-2ubuntu2 [137 kB]
[33m48% [27 libjpeg-turbo8 2251 B/137 kB 2%]                                                                   989 kB/s 26s[0m[33m49% [Working]                                                                                              989 kB/s 25s[0m                                                                                                                       Get:28 http://ports.ubuntu.com/ubuntu-ports noble/main riscv64 libjpeg8 riscv64 8c-2ubuntu11 [2150 B]
[33m49% [28 libjpeg8 2150 B/2150 B 100%]                                                                       989 kB/s 25s[0m[33m50% [Working]                                                                                              989 kB/s 25s[0m                                                                                                                       Get:29 http://ports.ubuntu.com/ubuntu-ports noble-updates/main riscv64 libdeflate0 riscv64 1.19-1build1.1 [40.2 kB]
[33m50% [29 libdeflate0 345 B/40.2 kB 1%]                                                                      989 kB/s 25s[0m[33m50% [Working]                                                                                              989 kB/s 25s[0m                                                                                                                       Get:30 http://ports.ubuntu.com/ubuntu-ports noble/main riscv64 libjbig0 riscv64 2.1-6.1ubuntu2 [31.3 kB]
[33m50% [30 libjbig0 1484 B/31.3 kB 5%]                                                                        989 kB/s 25s[0m[33m51% [Working]                                                                                              989 kB/s 25s[0m                                                                                                                       Get:31 http://ports.ubuntu.com/ubuntu-ports noble/main riscv64 liblerc4 riscv64 4.0.0+ds-4ubuntu2 [190 kB]
[33m51% [31 liblerc4 1443 B/190 kB 1%]                                                                         989 kB/s 25s[0m[33m51% [Working]                                                                                              989 kB/s 25s[0m                                                                                                                       Get:32 http://ports.ubuntu.com/ubuntu-ports noble/main riscv64 libwebp7 riscv64 1.3.2-0.4build3 [204 kB]
[33m51% [32 libwebp7 4837 B/204 kB 2%]                                                                         989 kB/s 25s[0m[33m52% [Working]                                                                                              989 kB/s 25s[0m                                                                                                                       Get:33 http://ports.ubuntu.com/ubuntu-ports noble-updates/main riscv64 libtiff6 riscv64 4.5.1+git230720-4ubuntu2.2 [205 kB]
[33m52% [33 libtiff6 3914 B/205 kB 2%]                                                                         989 kB/s 25s[0m[33m53% [Working]                                                                                              989 kB/s 25s[0m[33m53% [Waiting for headers]                                                                                  989 kB/s 25s[0m                                                                                                                       Get:34 http://ports.ubuntu.com/ubuntu-ports noble/main riscv64 libxpm4 riscv64 1:3.5.17-1build2 [38.2 kB]
[33m53% [34 libxpm4 1107 B/38.2 kB 3%]                                                                         989 kB/s 25s[0m[33m54% [Working]                                                                                              989 kB/s 25s[0m                                                                                                                       Get:35 http://ports.ubuntu.com/ubuntu-ports noble/main riscv64 libgd3 riscv64 2.3.3-9ubuntu5 [136 kB]
[33m54% [35 libgd3 2493 B/136 kB 2%]                                                                           989 kB/s 25s[0m[33m54% [35 libgd3 84.4 kB/136 kB 62%]                                                                         989 kB/s 25s[0m[33m54% [Working]                                                                                              989 kB/s 25s[0m                                                                                                                       Get:36 http://ports.ubuntu.com/ubuntu-ports noble-updates/main riscv64 libc-devtools riscv64 2.39-0ubuntu8.4 [27.7 kB]
[33m54% [36 libc-devtools 1046 B/27.7 kB 4%]                                                                   989 kB/s 25s[0m[33m55% [Working]                                                                                              989 kB/s 25s[0m                                                                                                                       Get:37 http://ports.ubuntu.com/ubuntu-ports noble-updates/main riscv64 linux-libc-dev riscv64 6.8.0-54.56 [1765 kB]
[33m55% [37 linux-libc-dev 787 B/1765 kB 0%]                                                                   989 kB/s 25s[0m[33m55% [37 linux-libc-dev 408 kB/1765 kB 23%]                                                                 989 kB/s 24s[0m[33m58% [Working]                                                                                              989 kB/s 23s[0m                                                                                                                       Get:38 http://ports.ubuntu.com/ubuntu-ports noble/main riscv64 libcrypt-dev riscv64 1:4.4.36-4build1 [250 kB]
[33m58% [38 libcrypt-dev 5151 B/250 kB 2%]                                                                     989 kB/s 23s[0m[33m59% [Working]                                                                                              989 kB/s 23s[0m                                                                                                                       Get:39 http://ports.ubuntu.com/ubuntu-ports noble/main riscv64 rpcsvc-proto riscv64 1.4.2-0ubuntu7 [65.8 kB]
[33m59% [39 rpcsvc-proto 1404 B/65.8 kB 2%]                                                                    989 kB/s 23s[0m[33m60% [Working]                                                                                              989 kB/s 22s[0m                                                                                                                       Get:40 http://ports.ubuntu.com/ubuntu-ports noble-updates/main riscv64 libc6-dev riscv64 2.39-0ubuntu8.4 [3458 kB]
[33m60% [40 libc6-dev 1271 B/3458 kB 0%]                                                                       989 kB/s 22s[0m[33m66% [Working]                                                                                              989 kB/s 19s[0m                                                                                                                       Get:41 http://ports.ubuntu.com/ubuntu-ports noble-updates/main riscv64 libheif-plugin-aomenc riscv64 1.17.6-1ubuntu4.1 [18.2 kB]
[33m66% [41 libheif-plugin-aomenc 18.2 kB/18.2 kB 100%]                                                        989 kB/s 19s[0m[33m66% [Working]                                                                                              989 kB/s 19s[0m                                                                                                                       Get:42 http://ports.ubuntu.com/ubuntu-ports noble-updates/main riscv64 libicu-dev riscv64 74.2-1ubuntu3.1 [17.2 MB]
[33m66% [42 libicu-dev 4970 B/17.2 MB 0%]                                                                      989 kB/s 19s[0m[33m69% [42 libicu-dev 1447 kB/17.2 MB 8%]                                                                     989 kB/s 18s[0m[33m75% [42 libicu-dev 5225 kB/17.2 MB 30%]                                                                    989 kB/s 14s[0m[33m77% [42 libicu-dev 6130 kB/17.2 MB 36%]                                                                    989 kB/s 13s[0m[33m79% [42 libicu-dev 7673 kB/17.2 MB 45%]                                                                    2271 kB/s 5s[0m[33m84% [42 libicu-dev 10.1 MB/17.2 MB 59%]                                                                    2271 kB/s 4s[0m[33m90% [42 libicu-dev 14.0 MB/17.2 MB 81%]                                                                    2271 kB/s 2s[0m[33m95% [42 libicu-dev 16.9 MB/17.2 MB 98%]                                                                    2271 kB/s 1s[0m[33m96% [Working]                                                                                              2271 kB/s 0s[0m                                                                                                                       Get:43 http://ports.ubuntu.com/ubuntu-ports noble/main riscv64 manpages-dev all 6.7-2 [2013 kB]
[33m96% [43 manpages-dev 7469 B/2013 kB 0%]                                                                    2271 kB/s 0s[0m[33m100% [Working]                                                                                             2271 kB/s 0s[0m                                                                                                                       Fetched 47.2 MB in 21s (2254 kB/s)
debconf: delaying package configuration, since apt-utils is not installed

7[0;31r8[1A(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 4372 files and directories currently installed.)
Preparing to unpack .../libc6_2.39-0ubuntu8.4_riscv64.deb ...
7[32;0f[42m[30mProgress: [  0%][49m[39m [..................................................................................................] 8debconf: unable to initialize frontend: Dialog
debconf: (No usable dialog-like program is installed, so the dialog based frontend cannot be used. at /usr/share/perl5/Debconf/FrontEnd/Dialog.pm line 79.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (Can't locate Term/ReadLine.pm in @INC (you may need to install the Term::ReadLine module) (@INC entries checked: /etc/perl /usr/local/lib/riscv64-linux-gnu/perl/5.38.2 /usr/local/share/perl/5.38.2 /usr/lib/riscv64-linux-gnu/perl5/5.38 /usr/share/perl5 /usr/lib/riscv64-linux-gnu/perl-base /usr/lib/riscv64-linux-gnu/perl/5.38 /usr/share/perl/5.38 /usr/local/lib/site_perl) at /usr/share/perl5/Debconf/FrontEnd/Readline.pm line 8.)
debconf: falling back to frontend: Teletype
Unpacking libc6:riscv64 (2.39-0ubuntu8.4) over (2.39-0ubuntu8.3) ...
7[32;0f[42m[30mProgress: [  1%][49m[39m [#.................................................................................................] 8Setting up libc6:riscv64 (2.39-0ubuntu8.4) ...
debconf: unable to initialize frontend: Dialog
debconf: (No usable dialog-like program is installed, so the dialog based frontend cannot be used. at /usr/share/perl5/Debconf/FrontEnd/Dialog.pm line 79.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (Can't locate Term/ReadLine.pm in @INC (you may need to install the Term::ReadLine module) (@INC entries checked: /etc/perl /usr/local/lib/riscv64-linux-gnu/perl/5.38.2 /usr/local/share/perl/5.38.2 /usr/lib/riscv64-linux-gnu/perl5/5.38 /usr/share/perl5 /usr/lib/riscv64-linux-gnu/perl-base /usr/lib/riscv64-linux-gnu/perl/5.38 /usr/share/perl/5.38 /usr/local/lib/site_perl) at /usr/share/perl5/Debconf/FrontEnd/Readline.pm line 8.)
debconf: falling back to frontend: Teletype
7[32;0f[42m[30mProgress: [  2%][49m[39m [##................................................................................................] 8(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 4371 files and directories currently installed.)
Preparing to unpack .../libc-bin_2.39-0ubuntu8.4_riscv64.deb ...
Unpacking libc-bin (2.39-0ubuntu8.4) over (2.39-0ubuntu8.3) ...
7[32;0f[42m[30mProgress: [  3%][49m[39m [###...............................................................................................] 8Setting up libc-bin (2.39-0ubuntu8.4) ...
7[32;0f[42m[30mProgress: [  4%][49m[39m [###...............................................................................................] 8Selecting previously unselected package libbsd0:riscv64.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 4370 files and directories currently installed.)
Preparing to unpack .../00-libbsd0_0.12.1-1build1.1_riscv64.deb ...
7[32;0f[42m[30mProgress: [  5%][49m[39m [#####.............................................................................................] 8Unpacking libbsd0:riscv64 (0.12.1-1build1.1) ...
Selecting previously unselected package libexpat1:riscv64.
Preparing to unpack .../01-libexpat1_2.6.1-2ubuntu0.2_riscv64.deb ...
7[32;0f[42m[30mProgress: [  6%][49m[39m [######............................................................................................] 8Unpacking libexpat1:riscv64 (2.6.1-2ubuntu0.2) ...
Selecting previously unselected package libicu74:riscv64.
Preparing to unpack .../02-libicu74_74.2-1ubuntu3.1_riscv64.deb ...
7[32;0f[42m[30mProgress: [  7%][49m[39m [#######...........................................................................................] 8Unpacking libicu74:riscv64 (74.2-1ubuntu3.1) ...
7[32;0f[42m[30mProgress: [  8%][49m[39m [#######...........................................................................................] 8Selecting previously unselected package libpng16-16t64:riscv64.
Preparing to unpack .../03-libpng16-16t64_1.6.43-5build1_riscv64.deb ...
Unpacking libpng16-16t64:riscv64 (1.6.43-5build1) ...
7[32;0f[42m[30mProgress: [  9%][49m[39m [########..........................................................................................] 8Selecting previously unselected package libxau6:riscv64.
Preparing to unpack .../04-libxau6_1%3a1.0.9-1build6_riscv64.deb ...
Unpacking libxau6:riscv64 (1:1.0.9-1build6) ...
7[32;0f[42m[30mProgress: [ 10%][49m[39m [##########........................................................................................] 8Selecting previously unselected package libxdmcp6:riscv64.
Preparing to unpack .../05-libxdmcp6_1%3a1.1.3-0ubuntu6_riscv64.deb ...
Unpacking libxdmcp6:riscv64 (1:1.1.3-0ubuntu6) ...
7[32;0f[42m[30mProgress: [ 11%][49m[39m [###########.......................................................................................] 8Selecting previously unselected package libxcb1:riscv64.
Preparing to unpack .../06-libxcb1_1.15-1ubuntu2_riscv64.deb ...
7[32;0f[42m[30mProgress: [ 12%][49m[39m [###########.......................................................................................] 8Unpacking libxcb1:riscv64 (1.15-1ubuntu2) ...
Selecting previously unselected package libx11-data.
Preparing to unpack .../07-libx11-data_2%3a1.8.7-1build1_all.deb ...
7[32;0f[42m[30mProgress: [ 13%][49m[39m [############......................................................................................] 8Unpacking libx11-data (2:1.8.7-1build1) ...
Selecting previously unselected package libx11-6:riscv64.
Preparing to unpack .../08-libx11-6_2%3a1.8.7-1build1_riscv64.deb ...
7[32;0f[42m[30mProgress: [ 14%][49m[39m [#############.....................................................................................] 8Unpacking libx11-6:riscv64 (2:1.8.7-1build1) ...
Selecting previously unselected package manpages.
Preparing to unpack .../09-manpages_6.7-2_all.deb ...
7[32;0f[42m[30mProgress: [ 15%][49m[39m [###############...................................................................................] 8Unpacking manpages (6.7-2) ...
7[32;0f[42m[30mProgress: [ 16%][49m[39m [###############...................................................................................] 8Selecting previously unselected package fonts-dejavu-mono.
Preparing to unpack .../10-fonts-dejavu-mono_2.37-8_all.deb ...
Unpacking fonts-dejavu-mono (2.37-8) ...
7[32;0f[42m[30mProgress: [ 17%][49m[39m [################..................................................................................] 8Selecting previously unselected package fonts-dejavu-core.
Preparing to unpack .../11-fonts-dejavu-core_2.37-8_all.deb ...
Unpacking fonts-dejavu-core (2.37-8) ...
7[32;0f[42m[30mProgress: [ 18%][49m[39m [#################.................................................................................] 8Selecting previously unselected package fontconfig-config.
Preparing to unpack .../12-fontconfig-config_2.15.0-1.1ubuntu2_riscv64.deb ...
Unpacking fontconfig-config (2.15.0-1.1ubuntu2) ...
7[32;0f[42m[30mProgress: [ 19%][49m[39m [###################...............................................................................] 8Selecting previously unselected package icu-devtools.
Preparing to unpack .../13-icu-devtools_74.2-1ubuntu3.1_riscv64.deb ...
7[32;0f[42m[30mProgress: [ 20%][49m[39m [###################...............................................................................] 8Unpacking icu-devtools (74.2-1ubuntu3.1) ...
Selecting previously unselected package libaom3:riscv64.
Preparing to unpack .../14-libaom3_3.8.2-2ubuntu0.1_riscv64.deb ...
7[32;0f[42m[30mProgress: [ 21%][49m[39m [####################..............................................................................] 8Unpacking libaom3:riscv64 (3.8.2-2ubuntu0.1) ...
Selecting previously unselected package libbrotli1:riscv64.
Preparing to unpack .../15-libbrotli1_1.1.0-2build2_riscv64.deb ...
7[32;0f[42m[30mProgress: [ 22%][49m[39m [#####################.............................................................................] 8Unpacking libbrotli1:riscv64 (1.1.0-2build2) ...
Selecting previously unselected package libc-dev-bin.
Preparing to unpack .../16-libc-dev-bin_2.39-0ubuntu8.4_riscv64.deb ...
7[32;0f[42m[30mProgress: [ 23%][49m[39m [######################............................................................................] 8Unpacking libc-dev-bin (2.39-0ubuntu8.4) ...
7[32;0f[42m[30mProgress: [ 24%][49m[39m [#######################...........................................................................] 8Selecting previously unselected package libfreetype6:riscv64.
Preparing to unpack .../17-libfreetype6_2.13.2+dfsg-1build3_riscv64.deb ...
Unpacking libfreetype6:riscv64 (2.13.2+dfsg-1build3) ...
7[32;0f[42m[30mProgress: [ 25%][49m[39m [########################..........................................................................] 8Selecting previously unselected package libfontconfig1:riscv64.
Preparing to unpack .../18-libfontconfig1_2.15.0-1.1ubuntu2_riscv64.deb ...
Unpacking libfontconfig1:riscv64 (2.15.0-1.1ubuntu2) ...
7[32;0f[42m[30mProgress: [ 26%][49m[39m [#########################.........................................................................] 8Selecting previously unselected package libsharpyuv0:riscv64.
Preparing to unpack .../19-libsharpyuv0_1.3.2-0.4build3_riscv64.deb ...
Unpacking libsharpyuv0:riscv64 (1.3.2-0.4build3) ...
7[32;0f[42m[30mProgress: [ 27%][49m[39m [##########################........................................................................] 8Selecting previously unselected package libheif-plugin-aomdec:riscv64.
Preparing to unpack .../20-libheif-plugin-aomdec_1.17.6-1ubuntu4.1_riscv64.deb ...
7[32;0f[42m[30mProgress: [ 28%][49m[39m [###########################.......................................................................] 8Unpacking libheif-plugin-aomdec:riscv64 (1.17.6-1ubuntu4.1) ...
Selecting previously unselected package libde265-0:riscv64.
Preparing to unpack .../21-libde265-0_1.0.15-1build3_riscv64.deb ...
7[32;0f[42m[30mProgress: [ 29%][49m[39m [############################......................................................................] 8Unpacking libde265-0:riscv64 (1.0.15-1build3) ...
Selecting previously unselected package libheif-plugin-libde265:riscv64.
Preparing to unpack .../22-libheif-plugin-libde265_1.17.6-1ubuntu4.1_riscv64.deb ...
7[32;0f[42m[30mProgress: [ 30%][49m[39m [#############################.....................................................................] 8Unpacking libheif-plugin-libde265:riscv64 (1.17.6-1ubuntu4.1) ...
Selecting previously unselected package libheif1:riscv64.
Preparing to unpack .../23-libheif1_1.17.6-1ubuntu4.1_riscv64.deb ...
7[32;0f[42m[30mProgress: [ 31%][49m[39m [##############################....................................................................] 8Unpacking libheif1:riscv64 (1.17.6-1ubuntu4.1) ...
7[32;0f[42m[30mProgress: [ 32%][49m[39m [###############################...................................................................] 8Selecting previously unselected package libjpeg-turbo8:riscv64.
Preparing to unpack .../24-libjpeg-turbo8_2.1.5-2ubuntu2_riscv64.deb ...
Unpacking libjpeg-turbo8:riscv64 (2.1.5-2ubuntu2) ...
7[32;0f[42m[30mProgress: [ 33%][49m[39m [################################..................................................................] 8Selecting previously unselected package libjpeg8:riscv64.
Preparing to unpack .../25-libjpeg8_8c-2ubuntu11_riscv64.deb ...
Unpacking libjpeg8:riscv64 (8c-2ubuntu11) ...
7[32;0f[42m[30mProgress: [ 34%][49m[39m [#################################.................................................................] 8Selecting previously unselected package libdeflate0:riscv64.
Preparing to unpack .../26-libdeflate0_1.19-1build1.1_riscv64.deb ...
Unpacking libdeflate0:riscv64 (1.19-1build1.1) ...
7[32;0f[42m[30mProgress: [ 35%][49m[39m [##################################................................................................] 8Selecting previously unselected package libjbig0:riscv64.
Preparing to unpack .../27-libjbig0_2.1-6.1ubuntu2_riscv64.deb ...
7[32;0f[42m[30mProgress: [ 36%][49m[39m [###################################...............................................................] 8Unpacking libjbig0:riscv64 (2.1-6.1ubuntu2) ...
Selecting previously unselected package liblerc4:riscv64.
Preparing to unpack .../28-liblerc4_4.0.0+ds-4ubuntu2_riscv64.deb ...
7[32;0f[42m[30mProgress: [ 37%][49m[39m [####################################..............................................................] 8Unpacking liblerc4:riscv64 (4.0.0+ds-4ubuntu2) ...
Selecting previously unselected package libwebp7:riscv64.
Preparing to unpack .../29-libwebp7_1.3.2-0.4build3_riscv64.deb ...
7[32;0f[42m[30mProgress: [ 38%][49m[39m [#####################################.............................................................] 8Unpacking libwebp7:riscv64 (1.3.2-0.4build3) ...
Selecting previously unselected package libtiff6:riscv64.
Preparing to unpack .../30-libtiff6_4.5.1+git230720-4ubuntu2.2_riscv64.deb ...
7[32;0f[42m[30mProgress: [ 39%][49m[39m [######################################............................................................] 8Unpacking libtiff6:riscv64 (4.5.1+git230720-4ubuntu2.2) ...
7[32;0f[42m[30mProgress: [ 40%][49m[39m [#######################################...........................................................] 8Selecting previously unselected package libxpm4:riscv64.
Preparing to unpack .../31-libxpm4_1%3a3.5.17-1build2_riscv64.deb ...
Unpacking libxpm4:riscv64 (1:3.5.17-1build2) ...
7[32;0f[42m[30mProgress: [ 41%][49m[39m [########################################..........................................................] 8Selecting previously unselected package libgd3:riscv64.
Preparing to unpack .../32-libgd3_2.3.3-9ubuntu5_riscv64.deb ...
Unpacking libgd3:riscv64 (2.3.3-9ubuntu5) ...
7[32;0f[42m[30mProgress: [ 42%][49m[39m [#########################################.........................................................] 8Selecting previously unselected package libc-devtools.
Preparing to unpack .../33-libc-devtools_2.39-0ubuntu8.4_riscv64.deb ...
Unpacking libc-devtools (2.39-0ubuntu8.4) ...
7[32;0f[42m[30mProgress: [ 43%][49m[39m [##########################################........................................................] 8Selecting previously unselected package linux-libc-dev:riscv64.
Preparing to unpack .../34-linux-libc-dev_6.8.0-54.56_riscv64.deb ...
7[32;0f[42m[30mProgress: [ 44%][49m[39m [###########################################.......................................................] 8Unpacking linux-libc-dev:riscv64 (6.8.0-54.56) ...
Selecting previously unselected package libcrypt-dev:riscv64.
Preparing to unpack .../35-libcrypt-dev_1%3a4.4.36-4build1_riscv64.deb ...
7[32;0f[42m[30mProgress: [ 45%][49m[39m [############################################......................................................] 8Unpacking libcrypt-dev:riscv64 (1:4.4.36-4build1) ...
Selecting previously unselected package rpcsvc-proto.
Preparing to unpack .../36-rpcsvc-proto_1.4.2-0ubuntu7_riscv64.deb ...
7[32;0f[42m[30mProgress: [ 46%][49m[39m [#############################################.....................................................] 8Unpacking rpcsvc-proto (1.4.2-0ubuntu7) ...
Selecting previously unselected package libc6-dev:riscv64.
Preparing to unpack .../37-libc6-dev_2.39-0ubuntu8.4_riscv64.deb ...
7[32;0f[42m[30mProgress: [ 47%][49m[39m [##############################################....................................................] 8Unpacking libc6-dev:riscv64 (2.39-0ubuntu8.4) ...
7[32;0f[42m[30mProgress: [ 48%][49m[39m [###############################################...................................................] 8Selecting previously unselected package libheif-plugin-aomenc:riscv64.
Preparing to unpack .../38-libheif-plugin-aomenc_1.17.6-1ubuntu4.1_riscv64.deb ...
Unpacking libheif-plugin-aomenc:riscv64 (1.17.6-1ubuntu4.1) ...
7[32;0f[42m[30mProgress: [ 49%][49m[39m [################################################..................................................] 8Selecting previously unselected package libicu-dev:riscv64.
Preparing to unpack .../39-libicu-dev_74.2-1ubuntu3.1_riscv64.deb ...
Unpacking libicu-dev:riscv64 (74.2-1ubuntu3.1) ...
7[32;0f[42m[30mProgress: [ 50%][49m[39m [#################################################.................................................] 8Selecting previously unselected package manpages-dev.
Preparing to unpack .../40-manpages-dev_6.7-2_all.deb ...
Unpacking manpages-dev (6.7-2) ...
7[32;0f[42m[30mProgress: [ 51%][49m[39m [##################################################................................................] 8Setting up libexpat1:riscv64 (2.6.1-2ubuntu0.2) ...
7[32;0f[42m[30mProgress: [ 52%][49m[39m [##################################################................................................] 8Setting up libsharpyuv0:riscv64 (1.3.2-0.4build3) ...
7[32;0f[42m[30mProgress: [ 53%][49m[39m [####################################################..............................................] 8Setting up libaom3:riscv64 (3.8.2-2ubuntu0.1) ...
7[32;0f[42m[30mProgress: [ 54%][49m[39m [#####################################################.............................................] 8Setting up libxau6:riscv64 (1:1.0.9-1build6) ...
7[32;0f[42m[30mProgress: [ 55%][49m[39m [######################################################............................................] 87[32;0f[42m[30mProgress: [ 56%][49m[39m [######################################################............................................] 8Setting up liblerc4:riscv64 (4.0.0+ds-4ubuntu2) ...
7[32;0f[42m[30mProgress: [ 57%][49m[39m [#######################################################...........................................] 8Setting up manpages (6.7-2) ...
7[32;0f[42m[30mProgress: [ 58%][49m[39m [#########################################################.........................................] 8Setting up libbrotli1:riscv64 (1.1.0-2build2) ...
7[32;0f[42m[30mProgress: [ 59%][49m[39m [##########################################################........................................] 8Setting up libdeflate0:riscv64 (1.19-1build1.1) ...
7[32;0f[42m[30mProgress: [ 60%][49m[39m [##########################################################........................................] 8Setting up linux-libc-dev:riscv64 (6.8.0-54.56) ...
7[32;0f[42m[30mProgress: [ 61%][49m[39m [###########################################################.......................................] 8Setting up libjbig0:riscv64 (2.1-6.1ubuntu2) ...
7[32;0f[42m[30mProgress: [ 62%][49m[39m [#############################################################.....................................] 8Setting up rpcsvc-proto (1.4.2-0ubuntu7) ...
7[32;0f[42m[30mProgress: [ 63%][49m[39m [##############################################################....................................] 87[32;0f[42m[30mProgress: [ 64%][49m[39m [##############################################################....................................] 8Setting up libx11-data (2:1.8.7-1build1) ...
7[32;0f[42m[30mProgress: [ 65%][49m[39m [###############################################################...................................] 8Setting up fonts-dejavu-mono (2.37-8) ...
7[32;0f[42m[30mProgress: [ 66%][49m[39m [################################################################..................................] 8Setting up libpng16-16t64:riscv64 (1.6.43-5build1) ...
7[32;0f[42m[30mProgress: [ 67%][49m[39m [##################################################################................................] 8Setting up fonts-dejavu-core (2.37-8) ...
7[32;0f[42m[30mProgress: [ 68%][49m[39m [##################################################################................................] 8Setting up libjpeg-turbo8:riscv64 (2.1.5-2ubuntu2) ...
7[32;0f[42m[30mProgress: [ 69%][49m[39m [###################################################################...............................] 8Setting up libwebp7:riscv64 (1.3.2-0.4build3) ...
7[32;0f[42m[30mProgress: [ 70%][49m[39m [####################################################################..............................] 8Setting up libicu74:riscv64 (74.2-1ubuntu3.1) ...
7[32;0f[42m[30mProgress: [ 71%][49m[39m [######################################################################............................] 87[32;0f[42m[30mProgress: [ 72%][49m[39m [######################################################################............................] 8Setting up libcrypt-dev:riscv64 (1:4.4.36-4build1) ...
7[32;0f[42m[30mProgress: [ 73%][49m[39m [#######################################################################...........................] 8Setting up libde265-0:riscv64 (1.0.15-1build3) ...
7[32;0f[42m[30mProgress: [ 74%][49m[39m [########################################################################..........................] 8Setting up libc-dev-bin (2.39-0ubuntu8.4) ...
7[32;0f[42m[30mProgress: [ 75%][49m[39m [#########################################################################.........................] 8Setting up libbsd0:riscv64 (0.12.1-1build1.1) ...
7[32;0f[42m[30mProgress: [ 76%][49m[39m [##########################################################################........................] 8Setting up libjpeg8:riscv64 (8c-2ubuntu11) ...
7[32;0f[42m[30mProgress: [ 77%][49m[39m [###########################################################################.......................] 8Setting up manpages-dev (6.7-2) ...
7[32;0f[42m[30mProgress: [ 78%][49m[39m [############################################################################......................] 8Setting up libxdmcp6:riscv64 (1:1.1.3-0ubuntu6) ...
7[32;0f[42m[30mProgress: [ 79%][49m[39m [#############################################################################.....................] 87[32;0f[42m[30mProgress: [ 80%][49m[39m [##############################################################################....................] 8Setting up libxcb1:riscv64 (1.15-1ubuntu2) ...
7[32;0f[42m[30mProgress: [ 81%][49m[39m [###############################################################################...................] 8Setting up fontconfig-config (2.15.0-1.1ubuntu2) ...
7[32;0f[42m[30mProgress: [ 82%][49m[39m [################################################################################..................] 8Setting up libfreetype6:riscv64 (2.13.2+dfsg-1build3) ...
7[32;0f[42m[30mProgress: [ 83%][49m[39m [#################################################################################.................] 8Setting up icu-devtools (74.2-1ubuntu3.1) ...
7[32;0f[42m[30mProgress: [ 84%][49m[39m [##################################################################################................] 8Setting up libtiff6:riscv64 (4.5.1+git230720-4ubuntu2.2) ...
7[32;0f[42m[30mProgress: [ 85%][49m[39m [###################################################################################...............] 8Setting up libc6-dev:riscv64 (2.39-0ubuntu8.4) ...
7[32;0f[42m[30mProgress: [ 86%][49m[39m [####################################################################################..............] 8Setting up libx11-6:riscv64 (2:1.8.7-1build1) ...
7[32;0f[42m[30mProgress: [ 87%][49m[39m [#####################################################################################.............] 87[32;0f[42m[30mProgress: [ 88%][49m[39m [######################################################################################............] 8Setting up libfontconfig1:riscv64 (2.15.0-1.1ubuntu2) ...
7[32;0f[42m[30mProgress: [ 89%][49m[39m [#######################################################################################...........] 8Setting up libicu-dev:riscv64 (74.2-1ubuntu3.1) ...
7[32;0f[42m[30mProgress: [ 90%][49m[39m [########################################################################################..........] 8Setting up libxpm4:riscv64 (1:3.5.17-1build2) ...
7[32;0f[42m[30mProgress: [ 91%][49m[39m [#########################################################################################.........] 8Setting up libheif-plugin-aomdec:riscv64 (1.17.6-1ubuntu4.1) ...
7[32;0f[42m[30mProgress: [ 92%][49m[39m [##########################################################################################........] 8Setting up libheif-plugin-libde265:riscv64 (1.17.6-1ubuntu4.1) ...
7[32;0f[42m[30mProgress: [ 93%][49m[39m [###########################################################################################.......] 8Setting up libheif1:riscv64 (1.17.6-1ubuntu4.1) ...
7[32;0f[42m[30mProgress: [ 94%][49m[39m [############################################################################################......] 8Setting up libgd3:riscv64 (2.3.3-9ubuntu5) ...
7[32;0f[42m[30mProgress: [ 95%][49m[39m [#############################################################################################.....] 87[32;0f[42m[30mProgress: [ 96%][49m[39m [##############################################################################################....] 8Setting up libc-devtools (2.39-0ubuntu8.4) ...
7[32;0f[42m[30mProgress: [ 97%][49m[39m [###############################################################################################...] 8Setting up libheif-plugin-aomenc:riscv64 (1.17.6-1ubuntu4.1) ...
7[32;0f[42m[30mProgress: [ 98%][49m[39m [################################################################################################..] 8Processing triggers for libc-bin (2.39-0ubuntu8.4) ...
7[32;0f[42m[30mProgress: [ 99%][49m[39m [#################################################################################################.] 8
7[0;32r8[1A[J****** START compiling Program:MemoryAccess(int[],int):int (MethodHash=1491d90c)
Generating code for Unix riscv64
OPTIONS: compCodeOpt = BLENDED_CODE
OPTIONS: compDbgCode = false
OPTIONS: compDbgInfo = true
OPTIONS: compDbgEnC  = false
OPTIONS: compProcedureSplitting   = false
OPTIONS: compProcedureSplittingEH = false
OPTIONS: optimizer should use profile data
IL to import:
IL_0000  02                ldarg.0     
IL_0001  03                ldarg.1     
IL_0002  94                ldelem.i4   
IL_0003  2a                ret         
1 return registers for return type int 
  [00..04) reg a0

lvaSetClass: setting class for V00 to (0x7de2d731f578) int[] 
Parameter V00 ABI info: [00..08) reg a0
Parameter V01 ABI info: [00..04) reg a1

lvaGrabTemp returning 2 (V02 tmp0) (a long lifetime temp) called for OutgoingArgSpace.

Local V02 should not be enregistered because: it is address exposed
; Initial local variable assignments
;
;  V00 arg0              ref  class-hnd <int[]>
;  V01 arg1              int 
;  V02 OutArgs        struct <0> do-not-enreg[XS] addr-exposed "OutgoingArgSpace" <Empty>
*************** In compInitDebuggingInfo() for Program:MemoryAccess(int[],int):int
getVars() returned cVars = 0, extendOthers = true
info.compVarScopesCount = 2
    	VarNum 	LVNum 	      Name 	Beg 	End
 0: 	00h 	00h 	  V00 arg0 	000h   	004h
 1: 	01h 	01h 	  V01 arg1 	000h   	004h
info.compStmtOffsetsCount    = 0
info.compStmtOffsetsImplicit = 0005h ( STACK_EMPTY CALL_SITE )
*************** In fgFindBasicBlocks() for Program:MemoryAccess(int[],int):int
Jump targets:
  none
New Basic Block BB01 [0000] created.
BB01 [0000] [000..004)
IL Code Size,Instr    4,   4, Basic Block count   1, Local Variable Num,Ref count   3,  2 for method Program:MemoryAccess(int[],int):int
OPTIONS: opts.MinOpts() == false
Basic block list for 'Program:MemoryAccess(int[],int):int'

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    [000..004)                           (return)                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Pre-import

*************** Finishing PHASE Pre-import
Trees after Pre-import

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    [000..004)                           (return)                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..004) (return), preds={} succs={}

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist

*************** Starting PHASE Profile incorporation
BBOPT set, but no profile data available (hr=80004001)

*************** Finishing PHASE Profile incorporation [no changes]

*************** Starting PHASE Canonicalize entry

*************** Finishing PHASE Canonicalize entry [no changes]

*************** Starting PHASE Importation

impImportBlockPending for BB01

Importing BB01 (PC=000) of 'Program:MemoryAccess(int[],int):int'
    [ 0]   0 (0x000) ldarg.0
    [ 1]   1 (0x001) ldarg.1
    [ 2]   2 (0x002) ldelem.i4
    [ 1]   3 (0x003) ret

STMT00000 ( 0x000[E-] ... ??? )
               [000004] ---XG------                         *  RETURN    int   
               [000003] n--XG------                         \--*  IND       int   
               [000002] ---XG------                            \--*  INDEX_ADDR byref int[]
               [000000] -----------                               +--*  LCL_VAR   ref    V00 arg0         
               [000001] -----------                               \--*  LCL_VAR   int    V01 arg1         

*************** Finishing PHASE Importation
Trees after Importation

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    [000..004)                           (return)                     i idxlen
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..004) (return), preds={} succs={}

***** BB01 [0000]
STMT00000 ( 0x000[E-] ... 0x003 )
               [000004] ---XG------                         *  RETURN    int   
               [000003] n--XG------                         \--*  IND       int   
               [000002] ---XG------                            \--*  INDEX_ADDR byref int[]
               [000000] -----------                               +--*  LCL_VAR   ref    V00 arg0         
               [000001] -----------                               \--*  LCL_VAR   int    V01 arg1         

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
[deferred prior check failed -- skipping this check]

*************** Starting PHASE Expand patchpoints

 -- no patchpoints to transform

*************** Finishing PHASE Expand patchpoints [no changes]

*************** Starting PHASE Indirect call transform

 -- no candidates to transform

*************** Finishing PHASE Indirect call transform [no changes]

*************** Starting PHASE Post-import

*************** Finishing PHASE Post-import [no changes]

*************** Starting PHASE Morph - Init

*************** Finishing PHASE Morph - Init [no changes]

*************** Starting PHASE Morph - Inlining
**************** Inline Tree

Inlines into 06000002 [via ExtendedDefaultPolicy] Program:MemoryAccess(int[],int):int:
Budget: initialTime=72, finalTime=72, initialBudget=720, currentBudget=720
Budget: initialSize=222, finalSize=222

*************** Finishing PHASE Morph - Inlining
Trees after Morph - Inlining

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    [000..004)                           (return)                     i idxlen
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..004) (return), preds={} succs={}

***** BB01 [0000]
STMT00000 ( 0x000[E-] ... 0x003 )
               [000004] ---XG------                         *  RETURN    int   
               [000003] n--XG------                         \--*  IND       int   
               [000002] ---XG------                            \--*  INDEX_ADDR byref int[]
               [000000] -----------                               +--*  LCL_VAR   ref    V00 arg0         
               [000001] -----------                               \--*  LCL_VAR   int    V01 arg1         

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
[deferred prior check failed -- skipping this check]

*************** Starting PHASE DFS blocks and remove dead code 1

*************** Finishing PHASE DFS blocks and remove dead code 1 [no changes]

*************** Starting PHASE Allocate Objects
no newobjs or newarr in this method; punting

*************** Finishing PHASE Allocate Objects [no changes]

*************** Starting PHASE Morph - Add internal blocks

*************** After fgAddInternal()

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    [000..004)                           (return)                     i idxlen
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty

*************** Finishing PHASE Morph - Add internal blocks [no changes]

*************** Starting PHASE Remove empty try

*************** In fgRemoveEmptyTry()
No EH in this method, nothing to remove.

*************** Finishing PHASE Remove empty try [no changes]

*************** Starting PHASE Remove empty try/catch/fault

*************** In fgRemoveEmptyTryCatchOrTryFault()
No EH in this method, nothing to remove.

*************** Finishing PHASE Remove empty try/catch/fault [no changes]

*************** Starting PHASE Remove empty finally
No EH in this method, nothing to remove.

*************** Finishing PHASE Remove empty finally [no changes]

*************** Starting PHASE Merge callfinally chains
No EH in this method, nothing to merge.

*************** Finishing PHASE Merge callfinally chains [no changes]

*************** Starting PHASE Clone finally
No EH in this method, no cloning.

*************** Finishing PHASE Clone finally [no changes]

*************** Starting PHASE Head and tail merge

*************** Finishing PHASE Head and tail merge
Trees after Head and tail merge

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    [000..004)                           (return)                     i idxlen
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..004) (return), preds={} succs={}

***** BB01 [0000]
STMT00000 ( 0x000[E-] ... 0x003 )
               [000004] ---XG------                         *  RETURN    int   
               [000003] n--XG------                         \--*  IND       int   
               [000002] ---XG------                            \--*  INDEX_ADDR byref int[]
               [000000] -----------                               +--*  LCL_VAR   ref    V00 arg0         
               [000001] -----------                               \--*  LCL_VAR   int    V01 arg1         

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
[deferred prior check failed -- skipping this check]

*************** Starting PHASE Merge throw blocks

*************** In fgTailMergeThrows
Method does not have multiple noreturn calls.

*************** Finishing PHASE Merge throw blocks [no changes]

*************** Starting PHASE Update flow graph early pass

*************** Finishing PHASE Update flow graph early pass [no changes]

*************** Starting PHASE Morph - Promote Structs

lvaTable before fgPromoteStructs
; Initial local variable assignments
;
;  V00 arg0              ref  class-hnd <int[]>
;  V01 arg1              int 
;  V02 OutArgs        struct <0> do-not-enreg[XS] addr-exposed "OutgoingArgSpace" <Empty>
  struct promotion of V02 is disabled because it has already been marked DNER

*************** Finishing PHASE Morph - Promote Structs [no changes]

*************** Starting PHASE DFS blocks and remove dead code 2

*************** Finishing PHASE DFS blocks and remove dead code 2 [no changes]

*************** Starting PHASE Morph - Structs/AddrExp
Identifying loops in DFS tree with following reverse post order:
RPO -> BB [pre, post]
00 -> BB01[0, 0]
Flow graph has no cycles; skipping identification of natural loops
LocalAddressVisitor visiting statement:
STMT00000 ( 0x000[E-] ... 0x003 )
               [000004] ---XG------                         *  RETURN    int   
               [000003] n--XG------                         \--*  IND       int   
               [000002] ---XG------                            \--*  INDEX_ADDR byref int[]
               [000000] -----------                               +--*  LCL_VAR   ref    V00 arg0         
               [000001] -----------                               \--*  LCL_VAR   int    V01 arg1         


*************** Finishing PHASE Morph - Structs/AddrExp [no changes]

*************** Starting PHASE Optimize mask conversions

*************** Finishing PHASE Optimize mask conversions [no changes]

*************** Starting PHASE Early liveness

Local V02 should not be enregistered because: struct size does not match reg size
Tracked variable (2 out of 3) table:
V00 arg0          [   ref]: refCnt =    1, refCntWtd =   0   
V01 arg1          [   int]: refCnt =    1, refCntWtd =   0   

*************** In fgPerBlockLocalVarLiveness()
BB01 USE(2)={V00 V01}
     DEF(0)={       }

** Memory liveness computed, GcHeap states and ByrefExposed states match
*************** In fgInterBlockLocalVarLiveness()

BB liveness after fgLiveVarAnalysis():

BB01 IN (2)={V00 V01}
     OUT(0)={       }


*************** Finishing PHASE Early liveness
Trees after Early liveness

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    [000..004)                           (return)                     i idxlen
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..004) (return), preds={} succs={}

***** BB01 [0000]
STMT00000 ( 0x000[E-] ... 0x003 )
               [000004] ---XG------                         *  RETURN    int   
               [000003] n--XG------                         \--*  IND       int   
               [000002] ---XG------                            \--*  INDEX_ADDR byref int[]
               [000000] -----------                               +--*  LCL_VAR   ref    V00 arg0          (last use)
               [000001] -----------                               \--*  LCL_VAR   int    V01 arg1          (last use)

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
[deferred prior check failed -- skipping this check]

*************** Starting PHASE Forward Substitution


===> BB01

*************** Finishing PHASE Forward Substitution [no changes]

*************** Starting PHASE Physical promotion

*************** Finishing PHASE Physical promotion [no changes]

*************** Starting PHASE Identify candidates for implicit byref copy omission

*************** Finishing PHASE Identify candidates for implicit byref copy omission [no changes]

*************** Starting PHASE Morph - ByRefs

*************** Finishing PHASE Morph - ByRefs [no changes]

*************** Starting PHASE Morph - Global

Morphing BB01
BB01 ineligible for cross-block
Assertions in: #NA
fgMorphTree BB01, STMT00000 (before)
               [000004] ---XG------                         *  RETURN    int   
               [000003] n--XG------                         \--*  IND       int   
               [000002] ---XG------                            \--*  INDEX_ADDR byref int[]
               [000000] -----------                               +--*  LCL_VAR   ref    V00 arg0          (last use)
               [000001] -----------                               \--*  LCL_VAR   int    V01 arg1          (last use)
BB01 requires throw helper block for SCK_RNGCHK_FAIL, created ACD0 with data 0x00000000
fgMorphIndexAddr (before remorph):
               [000016] ---X-O-----                         *  COMMA     byref 
               [000008] ---X-O-----                         +--*  BOUNDS_CHECK_Rng void  
               [000001] -----------                         |  +--*  LCL_VAR   int    V01 arg1          (last use)
               [000007] ---X-------                         |  \--*  ARR_LENGTH int   
               [000000] -----------                         |     \--*  LCL_VAR   ref    V00 arg0          (last use)
               [000015] -----O-----                         \--*  ARR_ADDR  byref int[]
               [000014] -----------                            \--*  ADD       byref 
               [000005] -----------                               +--*  LCL_VAR   ref    V00 arg0          (last use)
               [000013] -----------                               \--*  ADD       long  
               [000011] -----------                                  +--*  MUL       long  
               [000009] ---------U-                                  |  +--*  CAST      long <- uint
               [000006] -----------                                  |  |  \--*  LCL_VAR   int    V01 arg1          (last use)
               [000010] -------N---                                  |  \--*  CNS_INT   long   4
               [000012] -----------                                  \--*  CNS_INT   long   16
GenTreeNode creates assertion:
               [000007] ---X-+-----                         *  ARR_LENGTH int   
In BB01 New Local Constant Assertion: V00 != null, index = #01
BB01 requires throw helper block for SCK_RNGCHK_FAIL, sharing ACD0 (data 0x00000000)
fgMorphIndexAddr (after remorph):
               [000016] ---X-+-----                         *  COMMA     byref 
               [000008] ---X-+-----                         +--*  BOUNDS_CHECK_Rng void  
               [000001] -----+-----                         |  +--*  LCL_VAR   int    V01 arg1          (last use)
               [000007] ---X-+-----                         |  \--*  ARR_LENGTH int   
               [000000] -----+-----                         |     \--*  LCL_VAR   ref    V00 arg0          (last use)
               [000015] -----+-----                         \--*  ARR_ADDR  byref int[]
               [000014] -----+-----                            \--*  ADD       byref 
               [000005] -----+-----                               +--*  LCL_VAR   ref    V00 arg0          (last use)
               [000013] -----+-----                               \--*  ADD       long  
               [000011] -----+-----                                  +--*  LSH       long  
               [000009] -----+---U-                                  |  +--*  CAST      long <- uint
               [000006] -----+-----                                  |  |  \--*  LCL_VAR   int    V01 arg1          (last use)
               [000010] -----+-N---                                  |  \--*  CNS_INT   long   2
               [000012] -----+-----                                  \--*  CNS_INT   long   16

fgMorphTree BB01, STMT00000 (after)
               [000004] ---XG+-----                         *  RETURN    int   
               [000016] ---XG+-----                         \--*  COMMA     int   
               [000008] ---X-+-----                            +--*  BOUNDS_CHECK_Rng void  
               [000001] -----+-----                            |  +--*  LCL_VAR   int    V01 arg1          (last use)
               [000007] ---X-+-----                            |  \--*  ARR_LENGTH int   
               [000000] -----+-----                            |     \--*  LCL_VAR   ref    V00 arg0          (last use)
               [000019] n---G+-----                            \--*  IND       int   
               [000015] -----+-----                               \--*  ARR_ADDR  byref int[]
               [000014] -----+-----                                  \--*  ADD       byref 
               [000005] -----+-----                                     +--*  LCL_VAR   ref    V00 arg0          (last use)
               [000013] -----+-----                                     \--*  ADD       long  
               [000011] -----+-----                                        +--*  LSH       long  
               [000009] -----+---U-                                        |  +--*  CAST      long <- uint
               [000006] -----+-----                                        |  |  \--*  LCL_VAR   int    V01 arg1          (last use)
               [000010] -----+-N---                                        |  \--*  CNS_INT   long   2
               [000012] -----+-----                                        \--*  CNS_INT   long   16
morph assertion stats: 64 table size, 1 assertions, 0 dropped

*************** Finishing PHASE Morph - Global
Trees after Morph - Global

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    [000..004)                           (return)                     i idxlen
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..004) (return), preds={} succs={}

***** BB01 [0000]
STMT00000 ( 0x000[E-] ... 0x003 )
               [000004] ---XG+-----                         *  RETURN    int   
               [000016] ---XG+-----                         \--*  COMMA     int   
               [000008] ---X-+-----                            +--*  BOUNDS_CHECK_Rng void  
               [000001] -----+-----                            |  +--*  LCL_VAR   int    V01 arg1          (last use)
               [000007] ---X-+-----                            |  \--*  ARR_LENGTH int   
               [000000] -----+-----                            |     \--*  LCL_VAR   ref    V00 arg0          (last use)
               [000019] n---G+-----                            \--*  IND       int   
               [000015] -----+-----                               \--*  ARR_ADDR  byref int[]
               [000014] -----+-----                                  \--*  ADD       byref 
               [000005] -----+-----                                     +--*  LCL_VAR   ref    V00 arg0          (last use)
               [000013] -----+-----                                     \--*  ADD       long  
               [000011] -----+-----                                        +--*  LSH       long  
               [000009] -----+---U-                                        |  +--*  CAST      long <- uint
               [000006] -----+-----                                        |  |  \--*  LCL_VAR   int    V01 arg1          (last use)
               [000010] -----+-N---                                        |  \--*  CNS_INT   long   2
               [000012] -----+-----                                        \--*  CNS_INT   long   16

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
[deferred prior check failed -- skipping this check]

*************** Starting PHASE Post-Morph

*************** In fgMarkDemotedImplicitByRefArgs()

*************** Finishing PHASE Post-Morph
Trees after Post-Morph

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    [000..004)                           (return)                     i idxlen
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..004) (return), preds={} succs={}

***** BB01 [0000]
STMT00000 ( 0x000[E-] ... 0x003 )
               [000004] ---XG+-----                         *  RETURN    int   
               [000016] ---XG+-----                         \--*  COMMA     int   
               [000008] ---X-+-----                            +--*  BOUNDS_CHECK_Rng void  
               [000001] -----+-----                            |  +--*  LCL_VAR   int    V01 arg1         
               [000007] ---X-+-----                            |  \--*  ARR_LENGTH int   
               [000000] -----+-----                            |     \--*  LCL_VAR   ref    V00 arg0         
               [000019] n---G+-----                            \--*  IND       int   
               [000015] -----+-----                               \--*  ARR_ADDR  byref int[]
               [000014] -----+-----                                  \--*  ADD       byref 
               [000005] -----+-----                                     +--*  LCL_VAR   ref    V00 arg0         
               [000013] -----+-----                                     \--*  ADD       long  
               [000011] -----+-----                                        +--*  LSH       long  
               [000009] -----+---U-                                        |  +--*  CAST      long <- uint
               [000006] -----+-----                                        |  |  \--*  LCL_VAR   int    V01 arg1         
               [000010] -----+-N---                                        |  \--*  CNS_INT   long   2
               [000012] -----+-----                                        \--*  CNS_INT   long   16

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
[deferred prior check failed -- skipping this check]

*************** Starting PHASE GS Cookie
No GS security needed

*************** Finishing PHASE GS Cookie [no changes]

*************** Starting PHASE Compute block weights

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    [000..004)                           (return)                     i idxlen
---------------------------------------------------------------------------------------------------------------------------------------------------------------------


*************** Finishing PHASE Compute block weights [no changes]

*************** Starting PHASE Remove empty finally 2
No EH in this method, nothing to remove.

*************** Finishing PHASE Remove empty finally 2 [no changes]

*************** Starting PHASE Remove empty try 2

*************** In fgRemoveEmptyTry()
No EH in this method, nothing to remove.

*************** Finishing PHASE Remove empty try 2 [no changes]

*************** Starting PHASE Remove empty try-catch-fault 2

*************** In fgRemoveEmptyTryCatchOrTryFault()
No EH in this method, nothing to remove.

*************** Finishing PHASE Remove empty try-catch-fault 2 [no changes]

*************** Starting PHASE Invert loops

*************** Before renumbering the basic blocks

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    [000..004)                           (return)                     i idxlen
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

***************  Exception Handling table is empty
=============== No blocks renumbered!

*************** Finishing PHASE Invert loops [no changes]

*************** Starting PHASE Optimize control flow

*************** In fgUpdateFlowGraph()
Before updating the flow graph:

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    [000..004)                           (return)                     i idxlen
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

*************** In fgDebugCheckBBlist

*************** Finishing PHASE Optimize control flow
Trees after Optimize control flow

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    [000..004)                           (return)                     i idxlen
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..004) (return), preds={} succs={}

***** BB01 [0000]
STMT00000 ( 0x000[E-] ... 0x003 )
               [000004] ---XG+-----                         *  RETURN    int   
               [000016] ---XG+-----                         \--*  COMMA     int   
               [000008] ---X-+-----                            +--*  BOUNDS_CHECK_Rng void  
               [000001] -----+-----                            |  +--*  LCL_VAR   int    V01 arg1         
               [000007] ---X-+-----                            |  \--*  ARR_LENGTH int   
               [000000] -----+-----                            |     \--*  LCL_VAR   ref    V00 arg0         
               [000019] n---G+-----                            \--*  IND       int   
               [000015] -----+-----                               \--*  ARR_ADDR  byref int[]
               [000014] -----+-----                                  \--*  ADD       byref 
               [000005] -----+-----                                     +--*  LCL_VAR   ref    V00 arg0         
               [000013] -----+-----                                     \--*  ADD       long  
               [000011] -----+-----                                        +--*  LSH       long  
               [000009] -----+---U-                                        |  +--*  CAST      long <- uint
               [000006] -----+-----                                        |  |  \--*  LCL_VAR   int    V01 arg1         
               [000010] -----+-N---                                        |  \--*  CNS_INT   long   2
               [000012] -----+-----                                        \--*  CNS_INT   long   16

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
[deferred prior check failed -- skipping this check]

*************** Starting PHASE Post-morph head and tail merge

*************** Finishing PHASE Post-morph head and tail merge
Trees after Post-morph head and tail merge

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    [000..004)                           (return)                     i idxlen
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..004) (return), preds={} succs={}

***** BB01 [0000]
STMT00000 ( 0x000[E-] ... 0x003 )
               [000004] ---XG+-----                         *  RETURN    int   
               [000016] ---XG+-----                         \--*  COMMA     int   
               [000008] ---X-+-----                            +--*  BOUNDS_CHECK_Rng void  
               [000001] -----+-----                            |  +--*  LCL_VAR   int    V01 arg1         
               [000007] ---X-+-----                            |  \--*  ARR_LENGTH int   
               [000000] -----+-----                            |     \--*  LCL_VAR   ref    V00 arg0         
               [000019] n---G+-----                            \--*  IND       int   
               [000015] -----+-----                               \--*  ARR_ADDR  byref int[]
               [000014] -----+-----                                  \--*  ADD       byref 
               [000005] -----+-----                                     +--*  LCL_VAR   ref    V00 arg0         
               [000013] -----+-----                                     \--*  ADD       long  
               [000011] -----+-----                                        +--*  LSH       long  
               [000009] -----+---U-                                        |  +--*  CAST      long <- uint
               [000006] -----+-----                                        |  |  \--*  LCL_VAR   int    V01 arg1         
               [000010] -----+-N---                                        |  \--*  CNS_INT   long   2
               [000012] -----+-----                                        \--*  CNS_INT   long   16

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
[deferred prior check failed -- skipping this check]

*************** Starting PHASE DFS blocks and remove dead code 3

*************** Finishing PHASE DFS blocks and remove dead code 3 [no changes]

*************** Starting PHASE Find loops
*************** In optFindLoopsPhase()
Identifying loops in DFS tree with following reverse post order:
RPO -> BB [pre, post]
00 -> BB01[0, 0]
Flow graph has no cycles; skipping identification of natural loops

*************** Finishing PHASE Find loops
Trees after Find loops

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    [000..004)                           (return)                     i idxlen
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..004) (return), preds={} succs={}

***** BB01 [0000]
STMT00000 ( 0x000[E-] ... 0x003 )
               [000004] ---XG+-----                         *  RETURN    int   
               [000016] ---XG+-----                         \--*  COMMA     int   
               [000008] ---X-+-----                            +--*  BOUNDS_CHECK_Rng void  
               [000001] -----+-----                            |  +--*  LCL_VAR   int    V01 arg1         
               [000007] ---X-+-----                            |  \--*  ARR_LENGTH int   
               [000000] -----+-----                            |     \--*  LCL_VAR   ref    V00 arg0         
               [000019] n---G+-----                            \--*  IND       int   
               [000015] -----+-----                               \--*  ARR_ADDR  byref int[]
               [000014] -----+-----                                  \--*  ADD       byref 
               [000005] -----+-----                                     +--*  LCL_VAR   ref    V00 arg0         
               [000013] -----+-----                                     \--*  ADD       long  
               [000011] -----+-----                                        +--*  LSH       long  
               [000009] -----+---U-                                        |  +--*  CAST      long <- uint
               [000006] -----+-----                                        |  |  \--*  LCL_VAR   int    V01 arg1         
               [000010] -----+-N---                                        |  \--*  CNS_INT   long   2
               [000012] -----+-----                                        \--*  CNS_INT   long   16

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
[deferred prior check failed -- skipping this check]

*************** Starting PHASE Set block weights
After computing the dominance tree:


After computing reachability sets:
------------------------------------------------
BBnum  Reachable by 
------------------------------------------------
BB01 : BB01
Return blocks: BB01

*************** Finishing PHASE Set block weights [no changes]

*************** Starting PHASE Clone loops

*************** In optCloneLoops()
  No loops to clone

*************** Finishing PHASE Clone loops [no changes]

*************** Starting PHASE Unroll loops

*************** Finishing PHASE Unroll loops [no changes]

*************** Starting PHASE Compute dominators

*************** Finishing PHASE Compute dominators [no changes]

*************** Starting PHASE Morph array ops
No multi-dimensional array references in the function

*************** Finishing PHASE Morph array ops [no changes]

*************** Starting PHASE Mark local vars

*************** In lvaMarkLocalVars()
*** lvaComputeRefCounts ***

*** lvaComputeRefCounts -- explicit counts ***

*** marking local variables in block BB01 (weight=1)
STMT00000 ( 0x000[E-] ... 0x003 )
               [000004] ---XG+-----                         *  RETURN    int   
               [000016] ---XG+-----                         \--*  COMMA     int   
               [000008] ---X-+-----                            +--*  BOUNDS_CHECK_Rng void  
               [000001] -----+-----                            |  +--*  LCL_VAR   int    V01 arg1         
               [000007] ---X-+-----                            |  \--*  ARR_LENGTH int   
               [000000] -----+-----                            |     \--*  LCL_VAR   ref    V00 arg0         
               [000019] n---G+-----                            \--*  IND       int   
               [000015] -----+-----                               \--*  ARR_ADDR  byref int[]
               [000014] -----+-----                                  \--*  ADD       byref 
               [000005] -----+-----                                     +--*  LCL_VAR   ref    V00 arg0         
               [000013] -----+-----                                     \--*  ADD       long  
               [000011] -----+-----                                        +--*  LSH       long  
               [000009] -----+---U-                                        |  +--*  CAST      long <- uint
               [000006] -----+-----                                        |  |  \--*  LCL_VAR   int    V01 arg1         
               [000010] -----+-N---                                        |  \--*  CNS_INT   long   2
               [000012] -----+-----                                        \--*  CNS_INT   long   16
New refCnts for V01: refCnt =  1, refCntWtd = 1
New refCnts for V00: refCnt =  1, refCntWtd = 1
New refCnts for V00: refCnt =  2, refCntWtd = 2
New refCnts for V01: refCnt =  2, refCntWtd = 2

*** lvaComputeRefCounts -- implicit counts ***
New refCnts for V00: refCnt =  3, refCntWtd = 3
New refCnts for V00: refCnt =  4, refCntWtd = 4
New refCnts for V01: refCnt =  3, refCntWtd = 3
New refCnts for V01: refCnt =  4, refCntWtd = 4

*************** Finishing PHASE Mark local vars [no changes]

*************** Starting PHASE Find oper order
*************** In fgFindOperOrder()

*************** Finishing PHASE Find oper order
Trees after Find oper order

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    [000..004)                           (return)                     i idxlen
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..004) (return), preds={} succs={}

***** BB01 [0000]
STMT00000 ( 0x000[E-] ... 0x003 )
     ( 17, 25) [000004] ---XG+-----                         *  RETURN    int   
     ( 16, 24) [000016] ---XG+-----                         \--*  COMMA     int   
     (  8, 11) [000008] ---X-+-----                            +--*  BOUNDS_CHECK_Rng void  
     (  1,  1) [000001] -----+-----                            |  +--*  LCL_VAR   int    V01 arg1         
     (  3,  3) [000007] ---X-+-----                            |  \--*  ARR_LENGTH int   
     (  1,  1) [000000] -----+-----                            |     \--*  LCL_VAR   ref    V00 arg0         
     (  8, 13) [000019] n---G+-----                            \--*  IND       int   
     (  5, 11) [000015] -----+-----                               \--*  ARR_ADDR  byref int[]
     (  5, 11) [000014] -----+-N---                                  \--*  ADD       byref 
     (  1,  1) [000005] -----+-----                                     +--*  LCL_VAR   ref    V00 arg0         
     (  6, 15) [000013] -----+-----                                     \--*  ADD       long  
     (  4, 10) [000011] -----+-----                                        +--*  LSH       long  
     (  2,  5) [000009] -----+---U-                                        |  +--*  CAST      long <- uint
     (  1,  1) [000006] -----+-----                                        |  |  \--*  LCL_VAR   int    V01 arg1         
     (  1,  4) [000010] -----+-N---                                        |  \--*  CNS_INT   long   2
     (  1,  4) [000012] -----+-----                                        \--*  CNS_INT   long   16

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
[deferred prior check failed -- skipping this check]

*************** Starting PHASE Set block order
*************** In fgSetBlockOrder()
The biggest BB has   16 tree nodes

*************** Finishing PHASE Set block order
Trees after Set block order

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    [000..004)                           (return)                     i idxlen
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..004) (return), preds={} succs={}

***** BB01 [0000]
STMT00000 ( 0x000[E-] ... 0x003 )
N016 ( 17, 25) [000004] ---XG+-----                         *  RETURN    int   
N015 ( 16, 24) [000016] ---XG+-----                         \--*  COMMA     int   
N004 (  8, 11) [000008] ---X-+-----                            +--*  BOUNDS_CHECK_Rng void  
N001 (  1,  1) [000001] -----+-----                            |  +--*  LCL_VAR   int    V01 arg1         
N003 (  3,  3) [000007] ---X-+-----                            |  \--*  ARR_LENGTH int   
N002 (  1,  1) [000000] -----+-----                            |     \--*  LCL_VAR   ref    V00 arg0         
N014 (  8, 13) [000019] n---G+-----                            \--*  IND       int   
N013 (  5, 11) [000015] -----+-----                               \--*  ARR_ADDR  byref int[]
N012 (  5, 11) [000014] -----+-N---                                  \--*  ADD       byref 
N005 (  1,  1) [000005] -----+-----                                     +--*  LCL_VAR   ref    V00 arg0         
N011 (  6, 15) [000013] -----+-----                                     \--*  ADD       long  
N009 (  4, 10) [000011] -----+-----                                        +--*  LSH       long  
N007 (  2,  5) [000009] -----+---U-                                        |  +--*  CAST      long <- uint
N006 (  1,  1) [000006] -----+-----                                        |  |  \--*  LCL_VAR   int    V01 arg1         
N008 (  1,  4) [000010] -----+-N---                                        |  \--*  CNS_INT   long   2
N010 (  1,  4) [000012] -----+-----                                        \--*  CNS_INT   long   16

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
[deferred prior check failed -- skipping this check]

*************** Starting PHASE Build SSA representation
*************** In SsaBuilder::Build()
*************** In fgLocalVarLiveness()
In fgLocalVarLivenessInit

Local V02 should not be enregistered because: struct size does not match reg size
Tracked variable (2 out of 3) table:
V00 arg0          [   ref]: refCnt =    4, refCntWtd =   4   
V01 arg1          [   int]: refCnt =    4, refCntWtd =   4   

*************** In fgPerBlockLocalVarLiveness()
BB01 USE(2)={V00 V01} + ByrefExposed + GcHeap
     DEF(0)={       }

** Memory liveness computed, GcHeap states and ByrefExposed states match
*************** In fgInterBlockLocalVarLiveness()

BB liveness after fgLiveVarAnalysis():

BB01 IN (2)={V00 V01} + ByrefExposed + GcHeap
     OUT(0)={       }

*************** In optRemoveRedundantZeroInits()
Analyzing BB01
*************** In SsaBuilder::InsertPhiFunctions()
Inserting phi functions:
*************** In SsaBuilder::RenameVariables()
V00.1: defined in BB00 2 uses (global)
V01.1: defined in BB00 2 uses (global)

*************** Finishing PHASE Build SSA representation
Trees after Build SSA representation

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    [000..004)                           (return)                     i idxlen
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..004) (return), preds={} succs={}
SSA MEM: ByrefExposed, GcHeap = m:1

***** BB01 [0000]
STMT00000 ( 0x000[E-] ... 0x003 )
N016 ( 17, 25) [000004] ---XG+-----                         *  RETURN    int   
N015 ( 16, 24) [000016] ---XG+-----                         \--*  COMMA     int   
N004 (  8, 11) [000008] ---X-+-----                            +--*  BOUNDS_CHECK_Rng void  
N001 (  1,  1) [000001] -----+-----                            |  +--*  LCL_VAR   int    V01 arg1         u:1
N003 (  3,  3) [000007] ---X-+-----                            |  \--*  ARR_LENGTH int   
N002 (  1,  1) [000000] -----+-----                            |     \--*  LCL_VAR   ref    V00 arg0         u:1
N014 (  8, 13) [000019] n---G+-----                            \--*  IND       int   
N013 (  5, 11) [000015] -----+-----                               \--*  ARR_ADDR  byref int[]
N012 (  5, 11) [000014] -----+-N---                                  \--*  ADD       byref 
N005 (  1,  1) [000005] -----+-----                                     +--*  LCL_VAR   ref    V00 arg0         u:1 (last use)
N011 (  6, 15) [000013] -----+-----                                     \--*  ADD       long  
N009 (  4, 10) [000011] -----+-----                                        +--*  LSH       long  
N007 (  2,  5) [000009] -----+---U-                                        |  +--*  CAST      long <- uint
N006 (  1,  1) [000006] -----+-----                                        |  |  \--*  LCL_VAR   int    V01 arg1         u:1 (last use)
N008 (  1,  4) [000010] -----+-N---                                        |  \--*  CNS_INT   long   2
N010 (  1,  4) [000012] -----+-----                                        \--*  CNS_INT   long   16

SSA MEM: ByrefExposed, GcHeap = m:1

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
[info] HasGlobalUse overestimated for V00.1
[info] HasGlobalUse overestimated for V01.1
SSA checks completed successfully
[deferred prior check failed -- skipping this check]

*************** Starting PHASE Early Value Propagation
no arrays or null checks in the method

*************** Finishing PHASE Early Value Propagation [no changes]

*************** Starting PHASE Do value numbering

*************** In fgValueNumber()
Memory Initial Value in BB01 is: $100
Visiting BB01
The SSA definition for ByrefExposed (#1) at start of BB01 is $100 {InitVal($42)}
The SSA definition for GcHeap (#1) at start of BB01 is $100 {InitVal($42)}

***** BB01, STMT00000(before)
N016 ( 17, 25) [000004] ---XG+-----                         *  RETURN    int   
N015 ( 16, 24) [000016] ---XG+-----                         \--*  COMMA     int   
N004 (  8, 11) [000008] ---X-+-----                            +--*  BOUNDS_CHECK_Rng void  
N001 (  1,  1) [000001] -----+-----                            |  +--*  LCL_VAR   int    V01 arg1         u:1
N003 (  3,  3) [000007] ---X-+-----                            |  \--*  ARR_LENGTH int   
N002 (  1,  1) [000000] -----+-----                            |     \--*  LCL_VAR   ref    V00 arg0         u:1
N014 (  8, 13) [000019] n---G+-----                            \--*  IND       int   
N013 (  5, 11) [000015] -----+-----                               \--*  ARR_ADDR  byref int[]
N012 (  5, 11) [000014] -----+-N---                                  \--*  ADD       byref 
N005 (  1,  1) [000005] -----+-----                                     +--*  LCL_VAR   ref    V00 arg0         u:1 (last use)
N011 (  6, 15) [000013] -----+-----                                     \--*  ADD       long  
N009 (  4, 10) [000011] -----+-----                                        +--*  LSH       long  
N007 (  2,  5) [000009] -----+---U-                                        |  +--*  CAST      long <- uint
N006 (  1,  1) [000006] -----+-----                                        |  |  \--*  LCL_VAR   int    V01 arg1         u:1 (last use)
N008 (  1,  4) [000010] -----+-N---                                        |  \--*  CNS_INT   long   2
N010 (  1,  4) [000012] -----+-----                                        \--*  CNS_INT   long   16

N001 [000001]   LCL_VAR   V01 arg1         u:1 => $c0 {InitVal($41)}
N002 [000000]   LCL_VAR   V00 arg0         u:1 => $80 {InitVal($40)}
N003 [000007]   ARR_LENGTH => $180 {norm=$c1 {ARR_LENGTH($80)}, exc=$140 {NullPtrExc($80)}}
N004 [000008]   BOUNDS_CHECK_Rng => $145 {norm=$VN.Void, exc=$144( {NullPtrExc($80)},  {IndexOutOfRangeExc($c0, $c1)})}
N005 [000005]   LCL_VAR   V00 arg0         u:1 (last use) => $80 {InitVal($40)}
N006 [000006]   LCL_VAR   V01 arg1         u:1 (last use) => $c0 {InitVal($41)}
N007 [000009]   CAST      => $1c0 {$c0, long <- uint}
N008 [000010]   CNS_INT   2 => $200 {LngCns 2}
N009 [000011]   LSH       => $1c1 {LSH($1c0, $200)}
N010 [000012]   CNS_INT   16 => $202 {LngCns 16}
N011 [000013]   ADD       => $1c2 {ADD($1c1, $202)}
N012 [000014]   ADD       => $240 {ADD($80, $1c2)}
    VNForHandle(arrElemType: int) is $280
N013 [000015]   ARR_ADDR  => $2c0 {PtrToArrElem($280, $80, $1c0, $201)}
  Array element load: elemTypeEq is $280 for int[]
    VNForMapSelect($100, $280):mem returns $300 {$100[$280]}
  GcHeap[elemTypeEq: $280] is $300
    VNForMapSelect($300, $80):mem returns $301 {$300[$80]}
  GcHeap[elemTypeEq][array: $80] is $301
    VNForMapSelect($301, $1c0):int returns $181 {$301[$1c0]}
  GcHeap[elemTypeEq][array][index: $1c0] is $181
N014 [000019]   IND       => <l:$181 {$301[$1c0]}, c:$c2 {MemOpaque:NotInLoop}>
N015 [000016]   COMMA     => <l:$182 {norm=$181 {$301[$1c0]}, exc=$144( {NullPtrExc($80)},  {IndexOutOfRangeExc($c0, $c1)})}, c:$183 {norm=$c2 {MemOpaque:NotInLoop}, exc=$144( {NullPtrExc($80)},  {IndexOutOfRangeExc($c0, $c1)})}>
N016 [000004]   RETURN    => $145 {norm=$VN.Void, exc=$144( {NullPtrExc($80)},  {IndexOutOfRangeExc($c0, $c1)})}

***** BB01, STMT00000(after)
N016 ( 17, 25) [000004] ---XG+-----                         *  RETURN    int    $145
N015 ( 16, 24) [000016] ---XG+-----                         \--*  COMMA     int    <l:$182, c:$183>
N004 (  8, 11) [000008] ---X-+-----                            +--*  BOUNDS_CHECK_Rng void   $145
N001 (  1,  1) [000001] -----+-----                            |  +--*  LCL_VAR   int    V01 arg1         u:1 $c0
N003 (  3,  3) [000007] ---X-+-----                            |  \--*  ARR_LENGTH int    $180
N002 (  1,  1) [000000] -----+-----                            |     \--*  LCL_VAR   ref    V00 arg0         u:1 $80
N014 (  8, 13) [000019] n---G+-----                            \--*  IND       int    <l:$181, c:$c2>
N013 (  5, 11) [000015] -----+-----                               \--*  ARR_ADDR  byref int[] $2c0
N012 (  5, 11) [000014] -----+-N---                                  \--*  ADD       byref  $240
N005 (  1,  1) [000005] -----+-----                                     +--*  LCL_VAR   ref    V00 arg0         u:1 (last use) $80
N011 (  6, 15) [000013] -----+-----                                     \--*  ADD       long   $1c2
N009 (  4, 10) [000011] -----+-----                                        +--*  LSH       long   $1c1
N007 (  2,  5) [000009] -----+---U-                                        |  +--*  CAST      long <- uint $1c0
N006 (  1,  1) [000006] -----+-----                                        |  |  \--*  LCL_VAR   int    V01 arg1         u:1 (last use) $c0
N008 (  1,  4) [000010] -----+-N---                                        |  \--*  CNS_INT   long   2 $200
N010 (  1,  4) [000012] -----+-----                                        \--*  CNS_INT   long   16 $202


*************** Finishing PHASE Do value numbering
Trees after Do value numbering

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    [000..004)                           (return)                     i idxlen
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..004) (return), preds={} succs={}
SSA MEM: ByrefExposed, GcHeap = m:1

***** BB01 [0000]
STMT00000 ( 0x000[E-] ... 0x003 )
N016 ( 17, 25) [000004] ---XG+-----                         *  RETURN    int    $145
N015 ( 16, 24) [000016] ---XG+-----                         \--*  COMMA     int    <l:$182, c:$183>
N004 (  8, 11) [000008] ---X-+-----                            +--*  BOUNDS_CHECK_Rng void   $145
N001 (  1,  1) [000001] -----+-----                            |  +--*  LCL_VAR   int    V01 arg1         u:1 $c0
N003 (  3,  3) [000007] ---X-+-----                            |  \--*  ARR_LENGTH int    $180
N002 (  1,  1) [000000] -----+-----                            |     \--*  LCL_VAR   ref    V00 arg0         u:1 $80
N014 (  8, 13) [000019] n---G+-----                            \--*  IND       int    <l:$181, c:$c2>
N013 (  5, 11) [000015] -----+-----                               \--*  ARR_ADDR  byref int[] $2c0
N012 (  5, 11) [000014] -----+-N---                                  \--*  ADD       byref  $240
N005 (  1,  1) [000005] -----+-----                                     +--*  LCL_VAR   ref    V00 arg0         u:1 (last use) $80
N011 (  6, 15) [000013] -----+-----                                     \--*  ADD       long   $1c2
N009 (  4, 10) [000011] -----+-----                                        +--*  LSH       long   $1c1
N007 (  2,  5) [000009] -----+---U-                                        |  +--*  CAST      long <- uint $1c0
N006 (  1,  1) [000006] -----+-----                                        |  |  \--*  LCL_VAR   int    V01 arg1         u:1 (last use) $c0
N008 (  1,  4) [000010] -----+-N---                                        |  \--*  CNS_INT   long   2 $200
N010 (  1,  4) [000012] -----+-----                                        \--*  CNS_INT   long   16 $202

SSA MEM: ByrefExposed, GcHeap = m:1

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
[info] HasGlobalUse overestimated for V00.1
[info] HasGlobalUse overestimated for V01.1
SSA checks completed successfully
[deferred prior check failed -- skipping this check]

*************** Starting PHASE Hoist loop code

No loops; no hoisting

*************** Finishing PHASE Hoist loop code [no changes]

*************** Starting PHASE VN based copy prop
Copy Assertion for BB01
  curSsaName stack: { }

							Live vars after [000005]: {V00 V01} -{V00} => {V01}
							Live vars after [000006]: {V01} -{V01} => {}

*************** Finishing PHASE VN based copy prop [no changes]

*************** Starting PHASE Redundant branch opts

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    [000..004)                           (return)                     i idxlen
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

*************** Finishing PHASE Redundant branch opts [no changes]

*************** Starting PHASE Optimize Valnum CSEs
CONST CSE is disabled
Standard CSE Heuristic
Standard CSE Heuristic

*************** Finishing PHASE Optimize Valnum CSEs
Trees after Optimize Valnum CSEs

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    [000..004)                           (return)                     i idxlen
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..004) (return), preds={} succs={}

***** BB01 [0000]
STMT00000 ( 0x000[E-] ... 0x003 )
N016 ( 17, 25) [000004] ---XG+-----                         *  RETURN    int    $145
N015 ( 16, 24) [000016] ---XG+-----                         \--*  COMMA     int    <l:$182, c:$183>
N004 (  8, 11) [000008] ---X-+-----                            +--*  BOUNDS_CHECK_Rng void   $145
N001 (  1,  1) [000001] -----+-----                            |  +--*  LCL_VAR   int    V01 arg1         u:1 $c0
N003 (  3,  3) [000007] ---X-+-----                            |  \--*  ARR_LENGTH int    $180
N002 (  1,  1) [000000] -----+-----                            |     \--*  LCL_VAR   ref    V00 arg0         u:1 $80
N014 (  8, 13) [000019] n---G+-----                            \--*  IND       int    <l:$181, c:$c2>
N013 (  5, 11) [000015] -----+-----                               \--*  ARR_ADDR  byref int[] $2c0
N012 (  5, 11) [000014] -----+-N---                                  \--*  ADD       byref  $240
N005 (  1,  1) [000005] -----+-----                                     +--*  LCL_VAR   ref    V00 arg0         u:1 (last use) $80
N011 (  6, 15) [000013] -----+-----                                     \--*  ADD       long   $1c2
N009 (  4, 10) [000011] -----+-----                                        +--*  LSH       long   $1c1
N007 (  2,  5) [000009] -----+---U-                                        |  +--*  CAST      long <- uint $1c0
N006 (  1,  1) [000006] -----+-----                                        |  |  \--*  LCL_VAR   int    V01 arg1         u:1 (last use) $c0
N008 (  1,  4) [000010] -----+-N---                                        |  \--*  CNS_INT   long   2 $200
N010 (  1,  4) [000012] -----+-----                                        \--*  CNS_INT   long   16 $202

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
[deferred prior check failed -- skipping this check]

*************** Starting PHASE Assertion prop
GenTreeNode creates assertion:
N003 (  3,  3) [000007] ---X-+-----                         *  ARR_LENGTH int    $180
In BB01 New Global Constant Assertion: ($80,$0) V00.01 != null, index = #01
GenTreeNode creates assertion:
N004 (  8, 11) [000008] ---X-+-----                         *  BOUNDS_CHECK_Rng void   $145
In BB01 New Global ArrBnds  Assertion: ($0,$0) [idx: $c0 {InitVal($41)}; len: $c1 {ARR_LENGTH($80)}] in range , index = #02

BB01 valueGen = #01 #02

BB01:
 in   = #NA
 out  = #01 #02

Propagating #NA for BB01, stmt STMT00000, tree [000001], tree -> #NA
Propagating #NA for BB01, stmt STMT00000, tree [000000], tree -> #NA
Propagating #NA for BB01, stmt STMT00000, tree [000007], tree -> #01
Propagating #01 for BB01, stmt STMT00000, tree [000008], tree -> #02
Propagating #01 #02 for BB01, stmt STMT00000, tree [000005], tree -> #NA
Propagating #01 #02 for BB01, stmt STMT00000, tree [000006], tree -> #NA
Propagating #01 #02 for BB01, stmt STMT00000, tree [000009], tree -> #NA
Propagating #01 #02 for BB01, stmt STMT00000, tree [000010], tree -> #NA
Propagating #01 #02 for BB01, stmt STMT00000, tree [000011], tree -> #NA
Propagating #01 #02 for BB01, stmt STMT00000, tree [000012], tree -> #NA
Propagating #01 #02 for BB01, stmt STMT00000, tree [000013], tree -> #NA
Propagating #01 #02 for BB01, stmt STMT00000, tree [000014], tree -> #NA
Propagating #01 #02 for BB01, stmt STMT00000, tree [000015], tree -> #NA
Propagating #01 #02 for BB01, stmt STMT00000, tree [000019], tree -> #NA
Propagating #01 #02 for BB01, stmt STMT00000, tree [000016], tree -> #NA
Propagating #01 #02 for BB01, stmt STMT00000, tree [000004], tree -> #NA

*************** Finishing PHASE Assertion prop [no changes]

*************** Starting PHASE Optimize index checks
Looking for array size assertions for: $c1
ArrSize for lengthVN:0C1 = 0
[RangeCheck::GetRange] BB01 N001 (  1,  1) [000001] -----+-----                         *  LCL_VAR   int    V01 arg1         u:1 $c0
{
Merging assertions from pred edges of BB01 for op [000001] $c0
   Computed Range [000001] => <Unknown, Unknown>
}

*************** Finishing PHASE Optimize index checks [no changes]

*************** Starting PHASE Optimize Induction Variables
*************** In optInductionVariables()
  Skipping since this method has no natural loops

*************** Finishing PHASE Optimize Induction Variables [no changes]

*************** Starting PHASE VN-based dead store removal

*************** Finishing PHASE VN-based dead store removal [no changes]

*************** Starting PHASE Clone blocks with range checks
Not enough bounds checks in the block - bail out.

*************** Finishing PHASE Clone blocks with range checks [no changes]

*************** Starting PHASE VN based intrinsic expansion

*************** Finishing PHASE VN based intrinsic expansion [no changes]
Removing PHI functions

*************** Starting PHASE Stress gtSplitTree

*************** Finishing PHASE Stress gtSplitTree [no changes]

*************** Starting PHASE Remove empty finally 3
No EH in this method, nothing to remove.

*************** Finishing PHASE Remove empty finally 3 [no changes]

*************** Starting PHASE Remove empty try 3

*************** In fgRemoveEmptyTry()
No EH in this method, nothing to remove.

*************** Finishing PHASE Remove empty try 3 [no changes]

*************** Starting PHASE Remove empty try-catch-fault 3

*************** In fgRemoveEmptyTryCatchOrTryFault()
No EH in this method, nothing to remove.

*************** Finishing PHASE Remove empty try-catch-fault 3 [no changes]

*************** Starting PHASE Create EH funclets

*************** Finishing PHASE Create EH funclets [no changes]

*************** Starting PHASE Expand casts

*************** Finishing PHASE Expand casts [no changes]

*************** Starting PHASE Expand runtime lookups

*************** Finishing PHASE Expand runtime lookups [no changes]

*************** Starting PHASE Expand static init
Nothing to expand.

*************** Finishing PHASE Expand static init [no changes]

*************** Starting PHASE Expand TLS access
Nothing to expand.

*************** Finishing PHASE Expand TLS access [no changes]

*************** Starting PHASE Expand stack array allocation

*************** Finishing PHASE Expand stack array allocation [no changes]

*************** Starting PHASE Insert GC Polls

*************** Finishing PHASE Insert GC Polls [no changes]

*************** Starting PHASE Create throw helper blocks
fgNewBBinRegion(jumpKind=BBJ_THROW, tryIndex=0, hndIndex=0, putInFilter=false, runRarely=true, insertAtEnd=true): inserting after BB01
New Basic Block BB02 [0001] created.

Adding throw helper BB02 for ACD0 SCK_RNGCHK_FAIL in non-EH region for RNGCHK_FAIL

*************** Finishing PHASE Create throw helper blocks
Trees after Create throw helper blocks

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    [000..004)                           (return)                     i idxlen
BB02 [0001]  0                             0    [???..???)                           (throw )                     i rare keep internal
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..004) (return), preds={} succs={}

***** BB01 [0000]
STMT00000 ( 0x000[E-] ... 0x003 )
N016 ( 17, 25) [000004] ---XG+-----                         *  RETURN    int    $145
N015 ( 16, 24) [000016] ---XG+-----                         \--*  COMMA     int    <l:$182, c:$183>
N004 (  8, 11) [000008] ---X-+-----                            +--*  BOUNDS_CHECK_Rng void   $145
N001 (  1,  1) [000001] -----+-----                            |  +--*  LCL_VAR   int    V01 arg1         u:1 $c0
N003 (  3,  3) [000007] ---X-+-----                            |  \--*  ARR_LENGTH int    $180
N002 (  1,  1) [000000] -----+-----                            |     \--*  LCL_VAR   ref    V00 arg0         u:1 $80
N014 (  8, 13) [000019] n---G+-----                            \--*  IND       int    <l:$181, c:$c2>
N013 (  5, 11) [000015] -----+-----                               \--*  ARR_ADDR  byref int[] $2c0
N012 (  5, 11) [000014] -----+-N---                                  \--*  ADD       byref  $240
N005 (  1,  1) [000005] -----+-----                                     +--*  LCL_VAR   ref    V00 arg0         u:1 (last use) $80
N011 (  6, 15) [000013] -----+-----                                     \--*  ADD       long   $1c2
N009 (  4, 10) [000011] -----+-----                                        +--*  LSH       long   $1c1
N007 (  2,  5) [000009] -----+---U-                                        |  +--*  CAST      long <- uint $1c0
N006 (  1,  1) [000006] -----+-----                                        |  |  \--*  LCL_VAR   int    V01 arg1         u:1 (last use) $c0
N008 (  1,  4) [000010] -----+-N---                                        |  \--*  CNS_INT   long   2 $200
N010 (  1,  4) [000012] -----+-----                                        \--*  CNS_INT   long   16 $202

------------ BB02 [0001] [???..???) (throw), preds={} succs={}

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
[deferred prior check failed -- skipping this check]

*************** Starting PHASE Optimize bools
*************** In optOptimizeBools()

optimized 0 BBJ_COND cases, 0 BBJ_RETURN cases in 1 passes

*************** Finishing PHASE Optimize bools [no changes]

*************** Starting PHASE If conversion

*************** Finishing PHASE If conversion [no changes]

*************** Starting PHASE Optimize layout

*************** In fgUpdateFlowGraph()
Before updating the flow graph:

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    [000..004)                           (return)                     i idxlen
BB02 [0001]  0                             0    [???..???)                           (throw )                     i rare keep internal
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

*************** In fgDebugCheckBBlist

*************** In fgExpandRarelyRunBlocks()

*************** In fgUpdateFlowGraph()
Before updating the flow graph:

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    [000..004)                           (return)                     i idxlen
BB02 [0001]  0                             0    [???..???)                           (throw )                     i rare keep internal
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

*************** In fgDebugCheckBBlist

*************** Finishing PHASE Optimize layout
Trees after Optimize layout

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    [000..004)                           (return)                     i idxlen
BB02 [0001]  0                             0    [???..???)                           (throw )                     i rare keep internal
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..004) (return), preds={} succs={}

***** BB01 [0000]
STMT00000 ( 0x000[E-] ... 0x003 )
N016 ( 17, 25) [000004] ---XG+-----                         *  RETURN    int    $145
N015 ( 16, 24) [000016] ---XG+-----                         \--*  COMMA     int    <l:$182, c:$183>
N004 (  8, 11) [000008] ---X-+-----                            +--*  BOUNDS_CHECK_Rng void   $145
N001 (  1,  1) [000001] -----+-----                            |  +--*  LCL_VAR   int    V01 arg1         u:1 $c0
N003 (  3,  3) [000007] ---X-+-----                            |  \--*  ARR_LENGTH int    $180
N002 (  1,  1) [000000] -----+-----                            |     \--*  LCL_VAR   ref    V00 arg0         u:1 $80
N014 (  8, 13) [000019] n---G+-----                            \--*  IND       int    <l:$181, c:$c2>
N013 (  5, 11) [000015] -----+-----                               \--*  ARR_ADDR  byref int[] $2c0
N012 (  5, 11) [000014] -----+-N---                                  \--*  ADD       byref  $240
N005 (  1,  1) [000005] -----+-----                                     +--*  LCL_VAR   ref    V00 arg0         u:1 (last use) $80
N011 (  6, 15) [000013] -----+-----                                     \--*  ADD       long   $1c2
N009 (  4, 10) [000011] -----+-----                                        +--*  LSH       long   $1c1
N007 (  2,  5) [000009] -----+---U-                                        |  +--*  CAST      long <- uint $1c0
N006 (  1,  1) [000006] -----+-----                                        |  |  \--*  LCL_VAR   int    V01 arg1         u:1 (last use) $c0
N008 (  1,  4) [000010] -----+-N---                                        |  \--*  CNS_INT   long   2 $200
N010 (  1,  4) [000012] -----+-----                                        \--*  CNS_INT   long   16 $202

------------ BB02 [0001] [???..???) (throw), preds={} succs={}

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
[deferred prior check failed -- skipping this check]

*************** Starting PHASE Recognize Switch

*************** Finishing PHASE Recognize Switch [no changes]

*************** Starting PHASE Repair profile
No PGO data. Skipping profile repair.

*************** Finishing PHASE Repair profile [no changes]

*************** Starting PHASE Rationalize IR

*************** Finishing PHASE Rationalize IR
Trees after Rationalize IR

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    [000..004)                           (return)                     i LIR idxlen
BB02 [0001]  0                             0    [???..???)                           (throw )                     i LIR rare keep internal
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..004) (return), preds={} succs={}
               [000020] -----------                            IL_OFFSET void   INLRT @ 0x000[E-]
N001 (  1,  1) [000001] -----+-----                    t1 =    LCL_VAR   int    V01 arg1         u:1 $c0
N002 (  1,  1) [000000] -----+-----                    t0 =    LCL_VAR   ref    V00 arg0         u:1 $80
                                                            /--*  t0     ref    
N003 (  3,  3) [000007] ---X-+-----                    t7 = *  ARR_LENGTH int    $180
                                                            /--*  t1     int    
                                                            +--*  t7     int    
N004 (  8, 11) [000008] ---X-+-----                         *  BOUNDS_CHECK_Rng void   $145
N005 (  1,  1) [000005] -----+-----                    t5 =    LCL_VAR   ref    V00 arg0         u:1 (last use) $80
N006 (  1,  1) [000006] -----+-----                    t6 =    LCL_VAR   int    V01 arg1         u:1 (last use) $c0
                                                            /--*  t6     int    
N007 (  2,  5) [000009] -----+---U-                    t9 = *  CAST      long <- uint $1c0
N008 (  1,  4) [000010] -----+-N---                   t10 =    CNS_INT   long   2 $200
                                                            /--*  t9     long   
                                                            +--*  t10    long   
N009 (  4, 10) [000011] -----+-----                   t11 = *  LSH       long   $1c1
N010 (  1,  4) [000012] -----+-----                   t12 =    CNS_INT   long   16 $202
                                                            /--*  t11    long   
                                                            +--*  t12    long   
N011 (  6, 15) [000013] -----+-----                   t13 = *  ADD       long   $1c2
                                                            /--*  t5     ref    
                                                            +--*  t13    long   
N012 (  5, 11) [000014] -----+-N---                   t14 = *  ADD       byref  $240
                                                            /--*  t14    byref  
N014 (  8, 13) [000019] n---G+-----                   t19 = *  IND       int    <l:$181, c:$c2>
                                                            /--*  t19    int    
N016 ( 17, 25) [000004] ---XG+-----                         *  RETURN    int    $145

------------ BB02 [0001] [???..???) (throw), preds={} succs={}

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
[deferred prior check failed -- skipping this check]

*************** Starting PHASE Lowering nodeinfo
0 parameter register to local mappings
Addressing mode:
  Base
    N002 (  1,  1) [000000] -----+-----                         *  LCL_VAR   ref    V00 arg0         u:1 $80
  + 8
Removing unused node:
                 [000021] -c---------                         *  CNS_INT   long   8
New addressing mode node:
                 [000022] -----------                         *  LEA(b+8)  byref 

LowerCast for: N007 (  2,  5) [000009] -----+---U-                         *  CAST      long <- uint $1c0

Addressing mode:
  Base
    N005 (  1,  1) [000005] -----+-----                         *  LCL_VAR   ref    V00 arg0         u:1 (last use) $80
  + Index * 1 + 16
    N009 (  4, 10) [000011] -----+-----                         *  LSH       long   $1c1
Removing unused node:
  N011 (  6, 15) [000013] -----+-----                         *  ADD       long   $1c2
Removing unused node:
  N010 (  1,  4) [000012] -c---+-----                         *  CNS_INT   long   16 $202
New addressing mode node:
  N012 (  5, 11) [000014] -----+-----                         *  LEA(b+(i*1)+16) byref 

lowering return node
N016 ( 17, 25) [000004] ---XG+-----                         *  RETURN    int    $145
============
Lower has completed modifying nodes.

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    [000..004)                           (return)                     i LIR idxlen
BB02 [0001]  0                             0    [???..???)                           (throw )                     i LIR rare keep internal
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..004) (return), preds={} succs={}
               [000020] -----------                            IL_OFFSET void   INLRT @ 0x000[E-]
N001 (  1,  1) [000001] -----+-----                    t1 =    LCL_VAR   int    V01 arg1         u:1 $c0
N002 (  1,  1) [000000] -----+-----                    t0 =    LCL_VAR   ref    V00 arg0         u:1 $80
                                                            /--*  t0     ref    
               [000022] -c---------                   t22 = *  LEA(b+8)  byref 
                                                            /--*  t22    byref  
N003 (  3,  3) [000007] ---X-+-----                    t7 = *  IND       int   
                                                            /--*  t1     int    
                                                            +--*  t7     int    
N004 (  8, 11) [000008] ---X-+-----                         *  BOUNDS_CHECK_Rng void   $145
N005 (  1,  1) [000005] -----+-----                    t5 =    LCL_VAR   ref    V00 arg0         u:1 (last use) $80
N006 (  1,  1) [000006] -----+-----                    t6 =    LCL_VAR   int    V01 arg1         u:1 (last use) $c0
                                                            /--*  t6     int    
N007 (  2,  5) [000009] -----+---U-                    t9 = *  CAST      long <- uint $1c0
N008 (  1,  4) [000010] -c---+-N---                   t10 =    CNS_INT   long   2 $200
                                                            /--*  t9     long   
                                                            +--*  t10    long   
N009 (  4, 10) [000011] -----+-----                   t11 = *  LSH       long   $1c1
                                                            /--*  t5     ref    
                                                            +--*  t11    long   
N012 (  5, 11) [000014] -c---+-----                   t14 = *  LEA(b+(i*1)+16) byref 
                                                            /--*  t14    byref  
N014 (  8, 13) [000019] n---G+-----                   t19 = *  IND       int    <l:$181, c:$c2>
                                                            /--*  t19    int    
N016 ( 17, 25) [000004] ---XG+-----                         *  RETURN    int    $145

------------ BB02 [0001] [???..???) (throw), preds={} succs={}

-------------------------------------------------------------------------------------------------------------------

*** lvaComputeRefCounts ***

*** lvaComputeRefCounts -- explicit counts ***
New refCnts for V01: refCnt =  1, refCntWtd = 1
New refCnts for V00: refCnt =  1, refCntWtd = 1
New refCnts for V00: refCnt =  2, refCntWtd = 2
New refCnts for V01: refCnt =  2, refCntWtd = 2

*** lvaComputeRefCounts -- implicit counts ***
New refCnts for V00: refCnt =  3, refCntWtd = 3
New refCnts for V00: refCnt =  4, refCntWtd = 4
New refCnts for V01: refCnt =  3, refCntWtd = 3
New refCnts for V01: refCnt =  4, refCntWtd = 4
1/2 blocks are unreachable and will be removed:
  BB02
1 unreachable blocks were not removed:
  BB02
*************** In fgLocalVarLiveness()
; Initial local variable assignments
;
;  V00 arg0              ref  class-hnd single-def <int[]>
;  V01 arg1              int  single-def
;  V02 OutArgs        struct <0> do-not-enreg[XS] addr-exposed "OutgoingArgSpace" <Empty>
In fgLocalVarLivenessInit

Local V02 should not be enregistered because: struct size does not match reg size
Tracked variable (2 out of 3) table:
V00 arg0          [   ref]: refCnt =    4, refCntWtd =   4   
V01 arg1          [   int]: refCnt =    4, refCntWtd =   4   

*************** In fgPerBlockLocalVarLiveness()
BB01 USE(2)={V00 V01} + ByrefExposed + GcHeap
     DEF(0)={       }

BB02 USE(0)={}
     DEF(0)={}

** Memory liveness computed, GcHeap states and ByrefExposed states match
*************** In fgInterBlockLocalVarLiveness()

BB liveness after fgLiveVarAnalysis():

BB01 IN (2)={V00 V01} + ByrefExposed + GcHeap
     OUT(0)={       }

BB02 IN (0)={}
     OUT(0)={}


*************** In fgUpdateFlowGraph()
Before updating the flow graph:

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    [000..004)                           (return)                     i LIR idxlen
BB02 [0001]  0                             0    [???..???)                           (throw )                     i LIR rare keep internal
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

*************** In fgDebugCheckBBlist

*** lvaComputeRefCounts ***

*** lvaComputeRefCounts -- explicit counts ***
New refCnts for V01: refCnt =  1, refCntWtd = 1
New refCnts for V00: refCnt =  1, refCntWtd = 1
New refCnts for V00: refCnt =  2, refCntWtd = 2
New refCnts for V01: refCnt =  2, refCntWtd = 2

*** lvaComputeRefCounts -- implicit counts ***
New refCnts for V00: refCnt =  3, refCntWtd = 3
New refCnts for V00: refCnt =  4, refCntWtd = 4
New refCnts for V01: refCnt =  3, refCntWtd = 3
New refCnts for V01: refCnt =  4, refCntWtd = 4

*************** Finishing PHASE Lowering nodeinfo
Trees after Lowering nodeinfo

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    [000..004)                           (return)                     i LIR idxlen
BB02 [0001]  0                             0    [???..???)                           (throw )                     i LIR rare keep internal
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..004) (return), preds={} succs={}
               [000020] -----------                            IL_OFFSET void   INLRT @ 0x000[E-]
N001 (  1,  1) [000001] -----+-----                    t1 =    LCL_VAR   int    V01 arg1         u:1 $c0
N002 (  1,  1) [000000] -----+-----                    t0 =    LCL_VAR   ref    V00 arg0         u:1 $80
                                                            /--*  t0     ref    
               [000022] -c---------                   t22 = *  LEA(b+8)  byref 
                                                            /--*  t22    byref  
N003 (  3,  3) [000007] ---X-+-----                    t7 = *  IND       int   
                                                            /--*  t1     int    
                                                            +--*  t7     int    
N004 (  8, 11) [000008] ---X-+-----                         *  BOUNDS_CHECK_Rng void   $145
N005 (  1,  1) [000005] -----+-----                    t5 =    LCL_VAR   ref    V00 arg0         u:1 (last use) $80
N006 (  1,  1) [000006] -----+-----                    t6 =    LCL_VAR   int    V01 arg1         u:1 (last use) $c0
                                                            /--*  t6     int    
N007 (  2,  5) [000009] -----+---U-                    t9 = *  CAST      long <- uint $1c0
N008 (  1,  4) [000010] -c---+-N---                   t10 =    CNS_INT   long   2 $200
                                                            /--*  t9     long   
                                                            +--*  t10    long   
N009 (  4, 10) [000011] -----+-----                   t11 = *  LSH       long   $1c1
                                                            /--*  t5     ref    
                                                            +--*  t11    long   
N012 (  5, 11) [000014] -c---+-----                   t14 = *  LEA(b+(i*1)+16) byref 
                                                            /--*  t14    byref  
N014 (  8, 13) [000019] n---G+-----                   t19 = *  IND       int    <l:$181, c:$c2>
                                                            /--*  t19    int    
N016 ( 17, 25) [000004] ---XG+-----                         *  RETURN    int    $145

------------ BB02 [0001] [???..???) (throw), preds={} succs={}

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
[deferred prior check failed -- skipping this check]

*************** Starting PHASE Calculate stack level slots
Adding final args and determining ABI info for [000023]:
Args for call [000023] CALL after AddFinalArgsAndDetermineABIInfo:

Morphing args for 23.CALL:
Args for [000023].CALL after fgMorphArgs:
OutgoingArgsStackSize is 0

lowering call (before):
               [000023] --CXG------                            CALL help void   CORINFO_HELP_RNGCHKFAIL

Args:
======

Late args:
======
results of lowering call:
N001 (  1,  4) [000024] H----------                   t24 =    CNS_INT(h) long   0x7de2d71a3f40 ftn
lowering call (after):
N001 (  1,  4) [000024] H----------                   t24 =    CNS_INT(h) long   0x7de2d71a3f40 ftn
                                                            /--*  t24    long   control expr
               [000023] --CXG------                         *  CALL help void   CORINFO_HELP_RNGCHKFAIL


*************** Finishing PHASE Calculate stack level slots
Trees after Calculate stack level slots

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    [000..004)                           (return)                     i LIR idxlen
BB02 [0001]  0                             0    [???..???)                           (throw )                     i LIR rare keep internal
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..004) (return), preds={} succs={}
               [000020] -----------                            IL_OFFSET void   INLRT @ 0x000[E-]
N001 (  1,  1) [000001] -----+-----                    t1 =    LCL_VAR   int    V01 arg1         u:1 $c0
N002 (  1,  1) [000000] -----+-----                    t0 =    LCL_VAR   ref    V00 arg0         u:1 $80
                                                            /--*  t0     ref    
               [000022] -c---------                   t22 = *  LEA(b+8)  byref 
                                                            /--*  t22    byref  
N003 (  3,  3) [000007] ---X-+-----                    t7 = *  IND       int   
                                                            /--*  t1     int    
                                                            +--*  t7     int    
N004 (  8, 11) [000008] ---X-+-----                         *  BOUNDS_CHECK_Rng void   $145
N005 (  1,  1) [000005] -----+-----                    t5 =    LCL_VAR   ref    V00 arg0         u:1 (last use) $80
N006 (  1,  1) [000006] -----+-----                    t6 =    LCL_VAR   int    V01 arg1         u:1 (last use) $c0
                                                            /--*  t6     int    
N007 (  2,  5) [000009] -----+---U-                    t9 = *  CAST      long <- uint $1c0
N008 (  1,  4) [000010] -c---+-N---                   t10 =    CNS_INT   long   2 $200
                                                            /--*  t9     long   
                                                            +--*  t10    long   
N009 (  4, 10) [000011] -----+-----                   t11 = *  LSH       long   $1c1
                                                            /--*  t5     ref    
                                                            +--*  t11    long   
N012 (  5, 11) [000014] -c---+-----                   t14 = *  LEA(b+(i*1)+16) byref 
                                                            /--*  t14    byref  
N014 (  8, 13) [000019] n---G+-----                   t19 = *  IND       int    <l:$181, c:$c2>
                                                            /--*  t19    int    
N016 ( 17, 25) [000004] ---XG+-----                         *  RETURN    int    $145

------------ BB02 [0001] [???..???) (throw), preds={} succs={}
N001 (  1,  4) [000024] H----------                   t24 =    CNS_INT(h) long   0x7de2d71a3f40 ftn
                                                            /--*  t24    long   control expr
               [000023] --CXG------                         *  CALL help void   CORINFO_HELP_RNGCHKFAIL

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
[deferred prior check failed -- skipping this check]

*************** Starting PHASE Linear scan register alloc
Clearing modified regs.

buildIntervals ========

-----------------
LIVENESS:
-----------------
BB01
use: {V00 V01}
def: {}
 in: {V00 V01}
out: {}
BB02
use: {}
def: {}
 in: {}
out: {}
Interval  0: ref RefPositions {} physReg:NA Preferences=[allInt] Aversions=[]
  Interval  0: (V00) ref RefPositions {} physReg:NA Preferences=[allInt] Aversions=[]
Interval  1: int RefPositions {} physReg:NA Preferences=[allInt] Aversions=[]
  Interval  1: (V01) int RefPositions {} physReg:NA Preferences=[allInt] Aversions=[]

FP callee save candidate vars: None

floatVarCount = 0; hasLoops = false, singleExit = true
; Decided to create an EBP based frame for ETW stackwalking (Temporary RISCV64 force frame pointer)
*************** In lvaAssignFrameOffsets(REGALLOC_FRAME_LAYOUT)
Assign V01 arg1, size=4, stkOffs=-0x64
Pad V00 arg0, size=8, stkOffs=-0x6b, pad=7
Assign V00 arg0, size=8, stkOffs=-0x73
--- delta bump 96 for FP frame
--- virtual stack offset to actual stack offset delta is 96
-- V00 was -115, now -19
-- V01 was -100, now -4
-- V02 was 0, now 96

compRsvdRegCheck
  frame size  =    152
  lvaParameterStackSize =      0
 Returning true (RISCV64)

  Reserved REG_OPT_RSVD (t6) due to large frame
TUPLE STYLE DUMP BEFORE LSRA
Identifying loops in DFS tree with following reverse post order:
RPO -> BB [pre, post]
00 -> BB01[0, 0]
Flow graph has no cycles; skipping identification of natural loops
Start LSRA Block Sequence: 
Current block: BB01
Current block: BB02
Final LSRA Block Sequence:
BB01 (  1   )
BB02 (  0   )

BB01 [0000] [000..004) (return), preds={} succs={}
=====
  N000.                    IL_OFFSET INLRT @ 0x000[E-]
  N001.                    V01(t1)
  N002.                    V00(t0)
  N000. t22             =  LEA(b+8) ; t0
  N003. t7              =  IND      ; t22
  N004.                    BOUNDS_CHECK_Rng; t1,t7
  N005.                    V00(t5*)
  N006.                    V01(t6*)
  N007. t9              =  CAST     ; t6*
  N008.                    CNS_INT   2
  N009. t11             =  LSH      ; t9
  N012. t14             =  LEA(b+(i*1)+16); t5*,t11
  N014. t19             =  IND      ; t14
  N016.                    RETURN   ; t19

BB02 [0001] [???..???) (throw), preds={} succs={}
=====
  N001. t24             =  CNS_INT(h) 0x7de2d71a3f40 ftn
  N000.                    CALL help; t24




buildIntervals second part ========
Arg V00 is live in reg a0
Arg V01 is live in reg a1
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V00> BB00 regmask=[a0] minReg=1 fixed wt=100.00>
<RefPosition #1   @0   RefTypeParamDef <Ivl:1 V01> BB00 regmask=[a1] minReg=1 fixed wt=100.00>

NEW BLOCK BB01
<RefPosition #2   @1   RefTypeBB BB01 regmask=[] minReg=1 wt=100.00>

DefList: {  }
N003 (???,???) [000020] -----------                         *  IL_OFFSET void   INLRT @ 0x000[E-] REG NA

DefList: {  }
N005 (  1,  1) [000001] -----+-----                         *  LCL_VAR   int    V01 arg1         u:1 NA REG NA $c0

DefList: {  }
N007 (  1,  1) [000000] -----+-----                         *  LCL_VAR   ref    V00 arg0         u:1 NA REG NA $80

DefList: {  }
N009 (???,???) [000022] -c---------                         *  LEA(b+8)  byref  REG NA
Contained
DefList: {  }
N011 (  3,  3) [000007] ---X-+-----                         *  IND       int    REG NA
<RefPosition #3   @11  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[t0-t2 s1-t5] minReg=1 last wt=400.00>
Interval  2: int RefPositions {} physReg:NA Preferences=[t0-t2 s1-t5] Aversions=[]
<RefPosition #4   @12  RefTypeDef <Ivl:2> IND BB01 regmask=[t0-t2 s1-t5] minReg=1 wt=400.00>

DefList: { N011.t7. IND }
N013 (  8, 11) [000008] ---X-+-----                         *  BOUNDS_CHECK_Rng void   REG NA $145
Interval  3: int RefPositions {} physReg:NA Preferences=[t0-t2 s1-t5] Aversions=[]
<RefPosition #5   @13  RefTypeDef <Ivl:3 internal> BOUNDS_CHECK BB01 regmask=[t0-t2 s1-t5] minReg=1 wt=400.00>
Interval  4: int RefPositions {} physReg:NA Preferences=[t0-t2 s1-t5] Aversions=[]
<RefPosition #6   @13  RefTypeDef <Ivl:4 internal> BOUNDS_CHECK BB01 regmask=[t0-t2 s1-t5] minReg=1 wt=400.00>
<RefPosition #7   @13  RefTypeUse <Ivl:3 internal> BOUNDS_CHECK BB01 regmask=[t0-t2 s1-t5] minReg=1 last wt=400.00>
<RefPosition #8   @13  RefTypeUse <Ivl:4 internal> BOUNDS_CHECK BB01 regmask=[t0-t2 s1-t5] minReg=1 last wt=400.00>
<RefPosition #9   @13  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[t0-t2 s1-t5] minReg=1 last wt=400.00>
<RefPosition #10  @13  RefTypeUse <Ivl:2> BB01 regmask=[t0-t2 s1-t5] minReg=1 last wt=100.00>

DefList: {  }
N015 (  1,  1) [000005] -----+-----                         *  LCL_VAR   ref    V00 arg0         u:1 NA (last use) REG NA $80

DefList: {  }
N017 (  1,  1) [000006] -----+-----                         *  LCL_VAR   int    V01 arg1         u:1 NA (last use) REG NA $c0

DefList: {  }
N019 (  2,  5) [000009] -----+---U-                         *  CAST      long <- uint REG NA $1c0
<RefPosition #11  @19  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[t0-t2 s1-t5] minReg=1 last wt=400.00>
Interval  5: long RefPositions {} physReg:NA Preferences=[t0-t2 s1-t5] Aversions=[]
<RefPosition #12  @20  RefTypeDef <Ivl:5> CAST BB01 regmask=[t0-t2 s1-t5] minReg=1 wt=400.00>

DefList: { N019.t9. CAST }
N021 (  1,  4) [000010] -c---+-N---                         *  CNS_INT   long   2 REG NA $200
Contained
DefList: { N019.t9. CAST }
N023 (  4, 10) [000011] -----+-----                         *  LSH       long   REG NA $1c1
<RefPosition #13  @23  RefTypeUse <Ivl:5> BB01 regmask=[t0-t2 s1-t5] minReg=1 last wt=100.00>
Interval  6: long RefPositions {} physReg:NA Preferences=[t0-t2 s1-t5] Aversions=[]
<RefPosition #14  @24  RefTypeDef <Ivl:6> LSH BB01 regmask=[t0-t2 s1-t5] minReg=1 wt=400.00>

DefList: { N023.t11. LSH }
N025 (  5, 11) [000014] -c---+-----                         *  LEA(b+(i*1)+16) byref  REG NA
Contained
DefList: { N023.t11. LSH }
N027 (  8, 13) [000019] n---G+-----                         *  IND       int    REG NA <l:$181, c:$c2>
Interval  7: int RefPositions {} physReg:NA Preferences=[t0-t2 s1-t5] Aversions=[]
<RefPosition #15  @27  RefTypeDef <Ivl:7 internal> IND BB01 regmask=[t0-t2 s1-t5] minReg=1 wt=400.00>
<RefPosition #16  @27  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[t0-t2 s1-t5] minReg=1 last wt=400.00>
<RefPosition #17  @27  RefTypeUse <Ivl:6> BB01 regmask=[t0-t2 s1-t5] minReg=1 last wt=100.00>
<RefPosition #18  @27  RefTypeUse <Ivl:7 internal> IND BB01 regmask=[t0-t2 s1-t5] minReg=1 last wt=400.00>
Interval  8: int RefPositions {} physReg:NA Preferences=[t0-t2 s1-t5] Aversions=[]
<RefPosition #19  @28  RefTypeDef <Ivl:8> IND BB01 regmask=[t0-t2 s1-t5] minReg=1 wt=400.00>

DefList: { N027.t19. IND }
N029 ( 17, 25) [000004] ---XG+-----                         *  RETURN    int    REG NA $145
<RefPosition #20  @29  RefTypeFixedReg <Reg:a0 > BB01 regmask=[a0] minReg=1 wt=100.00>
<RefPosition #21  @29  RefTypeUse <Ivl:8> BB01 regmask=[a0] minReg=1 last fixed wt=100.00>



CHECKING LAST USES for BB01, liveout={}
==============================
use: {V00 V01}
def: {}

NEW BLOCK BB02


No predecessor;  - throw block; <RefPosition #22  @31  RefTypeBB BB02 regmask=[] minReg=1 wt=0.00>

firstColdLoc = 33
DefList: {  }
N033 (  1,  4) [000024] H----------                         *  CNS_INT(h) long   0x7de2d71a3f40 ftn REG NA
Interval  9: long RefPositions {} physReg:NA Preferences=[t0-t2 s1-t5] Aversions=[]
<RefPosition #23  @34  RefTypeDef <Ivl:9> CNS_INT BB02 regmask=[t0-t2 s1-t5] minReg=1 wt=0.00>

DefList: { N033.t24. CNS_INT }
N035 (???,???) [000023] --CXG------                         *  CALL help void   CORINFO_HELP_RNGCHKFAIL REG NA
<RefPosition #24  @35  RefTypeUse <Ivl:9> BB02 regmask=[t0-t2 s1-t5] minReg=1 last wt=0.00>
<RefPosition #25  @36  RefTypeKill BB02 regmask=[t0-t2 a0-a7 t3-t6] minReg=1>



CHECKING LAST USES for BB02, liveout={}
==============================
use: {}
def: {}

Linear scan intervals BEFORE VALIDATING INTERVALS:
Interval  0: (V00) ref RefPositions {#0@0 #3@11 #16@27} physReg:a0 Preferences=[a0] Aversions=[]
Interval  1: (V01) int RefPositions {#1@0 #9@13 #11@19} physReg:a1 Preferences=[a1] Aversions=[]
Interval  2: int RefPositions {#4@12 #10@13} physReg:NA Preferences=[t0-t2 s1-t5] Aversions=[]
Interval  3: int (INTERNAL) RefPositions {#5@13 #7@13} physReg:NA Preferences=[t0-t2 s1-t5] Aversions=[]
Interval  4: int (INTERNAL) RefPositions {#6@13 #8@13} physReg:NA Preferences=[t0-t2 s1-t5] Aversions=[]
Interval  5: long RefPositions {#12@20 #13@23} physReg:NA Preferences=[t0-t2 s1-t5] Aversions=[]
Interval  6: long RefPositions {#14@24 #17@27} physReg:NA Preferences=[t0-t2 s1-t5] Aversions=[]
Interval  7: int (INTERNAL) RefPositions {#15@27 #18@27} physReg:NA Preferences=[t0-t2 s1-t5] Aversions=[]
Interval  8: int RefPositions {#19@28 #21@29} physReg:NA Preferences=[a0] Aversions=[]
Interval  9: long (constant) RefPositions {#23@34 #24@35} physReg:NA Preferences=[t0-t2 s1-t5] Aversions=[]

------------
REFPOSITIONS BEFORE VALIDATING INTERVALS: 
------------
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V00> BB00 regmask=[a0] minReg=1 fixed regOptional wt=100.00>
<RefPosition #1   @0   RefTypeParamDef <Ivl:1 V01> BB00 regmask=[a1] minReg=1 fixed regOptional wt=100.00>
<RefPosition #2   @1   RefTypeBB BB01 regmask=[] minReg=1 wt=100.00>
<RefPosition #3   @11  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[t0-t2 s1-t5] minReg=1 wt=400.00>
<RefPosition #4   @12  RefTypeDef <Ivl:2> IND BB01 regmask=[t0-t2 s1-t5] minReg=1 wt=400.00>
<RefPosition #5   @13  RefTypeDef <Ivl:3 internal> BOUNDS_CHECK BB01 regmask=[t0-t2 s1-t5] minReg=1 wt=400.00>
<RefPosition #6   @13  RefTypeDef <Ivl:4 internal> BOUNDS_CHECK BB01 regmask=[t0-t2 s1-t5] minReg=1 wt=400.00>
<RefPosition #7   @13  RefTypeUse <Ivl:3 internal> BOUNDS_CHECK BB01 regmask=[t0-t2 s1-t5] minReg=1 last wt=400.00>
<RefPosition #8   @13  RefTypeUse <Ivl:4 internal> BOUNDS_CHECK BB01 regmask=[t0-t2 s1-t5] minReg=1 last wt=400.00>
<RefPosition #9   @13  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[t0-t2 s1-t5] minReg=1 wt=400.00>
<RefPosition #10  @13  RefTypeUse <Ivl:2> BB01 regmask=[t0-t2 s1-t5] minReg=1 last wt=100.00>
<RefPosition #11  @19  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[t0-t2 s1-t5] minReg=1 last wt=400.00>
<RefPosition #12  @20  RefTypeDef <Ivl:5> CAST BB01 regmask=[t0-t2 s1-t5] minReg=1 wt=400.00>
<RefPosition #13  @23  RefTypeUse <Ivl:5> BB01 regmask=[t0-t2 s1-t5] minReg=1 last wt=100.00>
<RefPosition #14  @24  RefTypeDef <Ivl:6> LSH BB01 regmask=[t0-t2 s1-t5] minReg=1 wt=400.00>
<RefPosition #15  @27  RefTypeDef <Ivl:7 internal> IND BB01 regmask=[t0-t2 s1-t5] minReg=1 wt=400.00>
<RefPosition #16  @27  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[t0-t2 s1-t5] minReg=1 last wt=400.00>
<RefPosition #17  @27  RefTypeUse <Ivl:6> BB01 regmask=[t0-t2 s1-t5] minReg=1 last wt=100.00>
<RefPosition #18  @27  RefTypeUse <Ivl:7 internal> IND BB01 regmask=[t0-t2 s1-t5] minReg=1 last wt=400.00>
<RefPosition #19  @28  RefTypeDef <Ivl:8> IND BB01 regmask=[a0] minReg=1 wt=400.00>
<RefPosition #20  @29  RefTypeFixedReg <Reg:a0 > BB01 regmask=[a0] minReg=1 wt=100.00>
<RefPosition #21  @29  RefTypeUse <Ivl:8> BB01 regmask=[a0] minReg=1 last fixed wt=100.00>
<RefPosition #22  @31  RefTypeBB BB02 regmask=[] minReg=1 wt=0.00>
<RefPosition #23  @34  RefTypeDef <Ivl:9> CNS_INT BB02 regmask=[t0-t2 s1-t5] minReg=1 wt=0.00>
<RefPosition #24  @35  RefTypeUse <Ivl:9> BB02 regmask=[t0-t2 s1-t5] minReg=1 last wt=0.00>
<RefPosition #25  @36  RefTypeKill BB02 regmask=[t0-t2 a0-a7 t3-t6] minReg=1>

------------
REFPOSITIONS DURING VALIDATE INTERVALS (RefPositions per interval)
------------

-----------------
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V00> BB00 regmask=[a0] minReg=1 fixed regOptional wt=100.00>
<RefPosition #3   @11  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[t0-t2 s1-t5] minReg=1 wt=400.00>
<RefPosition #16  @27  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[t0-t2 s1-t5] minReg=1 last wt=400.00>
-----------------
<RefPosition #1   @0   RefTypeParamDef <Ivl:1 V01> BB00 regmask=[a1] minReg=1 fixed regOptional wt=100.00>
<RefPosition #9   @13  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[t0-t2 s1-t5] minReg=1 wt=400.00>
<RefPosition #11  @19  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[t0-t2 s1-t5] minReg=1 last wt=400.00>
TUPLE STYLE DUMP WITH REF POSITIONS
Incoming Parameters:  V00 V01
BB01 [0000] [000..004) (return), preds={} succs={}
=====
  N003.                    IL_OFFSET INLRT @ 0x000[E-]
  N005.                    V01(L1)
  N007.                    V00(L0)
  N009.                    LEA(b+8) 
  N011.                    IND      
                               Use:<V00/L0>(#3)
        Def:<I2>(#4)
  N013.                    BOUNDS_CHECK_Rng
        Def:<T3>(#5)
        Def:<T4>(#6)
                               Use:<T3>(#7) *
                               Use:<T4>(#8) *
                               Use:<V01/L1>(#9)
                               Use:<I2>(#10) *
  N015.                    V00(L0)
  N017.                    V01(L1)
  N019.                    CAST     
                               Use:<V01/L1>(#11) *
        Def:<I5>(#12)
  N021.                    CNS_INT   2
  N023.                    LSH      
                               Use:<I5>(#13) *
        Def:<I6>(#14)
  N025.                    LEA(b+(i*1)+16)
  N027.                    IND      
        Def:<T7>(#15)
                               Use:<V00/L0>(#16) *
                               Use:<I6>(#17) *
                               Use:<T7>(#18) *
        Def:<I8>(#19)
  N029.                    RETURN   
                               Use:<I8>(#21) Fixed:a0(#20) *

BB02 [0001] [???..???) (throw), preds={} succs={}
=====
  N033.                    CNS_INT(h) 0x7de2d71a3f40 ftn
        Def:<I9>(#23)
  N035.                    CALL help
                               Use:<I9>(#24) *
        Kill: [t0-t2 a0-a7 t3-t6] 




Linear scan intervals after buildIntervals:
Interval  0: (V00) ref RefPositions {#0@0 #3@11 #16@27} physReg:a0 Preferences=[a0] Aversions=[]
Interval  1: (V01) int RefPositions {#1@0 #9@13 #11@19} physReg:a1 Preferences=[a1] Aversions=[]
Interval  2: int RefPositions {#4@12 #10@13} physReg:NA Preferences=[t0-t2 s1-t5] Aversions=[]
Interval  3: int (INTERNAL) RefPositions {#5@13 #7@13} physReg:NA Preferences=[t0-t2 s1-t5] Aversions=[]
Interval  4: int (INTERNAL) RefPositions {#6@13 #8@13} physReg:NA Preferences=[t0-t2 s1-t5] Aversions=[]
Interval  5: long RefPositions {#12@20 #13@23} physReg:NA Preferences=[t0-t2 s1-t5] Aversions=[]
Interval  6: long RefPositions {#14@24 #17@27} physReg:NA Preferences=[t0-t2 s1-t5] Aversions=[]
Interval  7: int (INTERNAL) RefPositions {#15@27 #18@27} physReg:NA Preferences=[t0-t2 s1-t5] Aversions=[]
Interval  8: int RefPositions {#19@28 #21@29} physReg:NA Preferences=[a0] Aversions=[]
Interval  9: long (constant) RefPositions {#23@34 #24@35} physReg:NA Preferences=[t0-t2 s1-t5] Aversions=[]

*************** In LinearScan::allocateRegisters()

Linear scan intervals before allocateRegisters:
Interval  0: (V00) ref RefPositions {#0@0 #3@11 #16@27} physReg:a0 Preferences=[a0] Aversions=[]
Interval  1: (V01) int RefPositions {#1@0 #9@13 #11@19} physReg:a1 Preferences=[a1] Aversions=[]
Interval  2: int RefPositions {#4@12 #10@13} physReg:NA Preferences=[t0-t2 s1-t5] Aversions=[]
Interval  3: int (INTERNAL) RefPositions {#5@13 #7@13} physReg:NA Preferences=[t0-t2 s1-t5] Aversions=[]
Interval  4: int (INTERNAL) RefPositions {#6@13 #8@13} physReg:NA Preferences=[t0-t2 s1-t5] Aversions=[]
Interval  5: long RefPositions {#12@20 #13@23} physReg:NA Preferences=[t0-t2 s1-t5] Aversions=[]
Interval  6: long RefPositions {#14@24 #17@27} physReg:NA Preferences=[t0-t2 s1-t5] Aversions=[]
Interval  7: int (INTERNAL) RefPositions {#15@27 #18@27} physReg:NA Preferences=[t0-t2 s1-t5] Aversions=[]
Interval  8: int RefPositions {#19@28 #21@29} physReg:NA Preferences=[a0] Aversions=[]
Interval  9: long (constant) RefPositions {#23@34 #24@35} physReg:NA Preferences=[t0-t2 s1-t5] Aversions=[]

------------
REFPOSITIONS BEFORE ALLOCATION: 
------------
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V00> BB00 regmask=[a0] minReg=1 fixed regOptional wt=100.00>
<RefPosition #1   @0   RefTypeParamDef <Ivl:1 V01> BB00 regmask=[a1] minReg=1 fixed regOptional wt=100.00>
<RefPosition #2   @1   RefTypeBB BB01 regmask=[] minReg=1 wt=100.00>
<RefPosition #3   @11  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[t0-t2 s1-t5] minReg=1 wt=400.00>
<RefPosition #4   @12  RefTypeDef <Ivl:2> IND BB01 regmask=[t0-t2 s1-t5] minReg=1 wt=400.00>
<RefPosition #5   @13  RefTypeDef <Ivl:3 internal> BOUNDS_CHECK BB01 regmask=[t0-t2 s1-t5] minReg=1 wt=400.00>
<RefPosition #6   @13  RefTypeDef <Ivl:4 internal> BOUNDS_CHECK BB01 regmask=[t0-t2 s1-t5] minReg=1 wt=400.00>
<RefPosition #7   @13  RefTypeUse <Ivl:3 internal> BOUNDS_CHECK BB01 regmask=[t0-t2 s1-t5] minReg=1 last wt=400.00>
<RefPosition #8   @13  RefTypeUse <Ivl:4 internal> BOUNDS_CHECK BB01 regmask=[t0-t2 s1-t5] minReg=1 last wt=400.00>
<RefPosition #9   @13  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[t0-t2 s1-t5] minReg=1 wt=400.00>
<RefPosition #10  @13  RefTypeUse <Ivl:2> BB01 regmask=[t0-t2 s1-t5] minReg=1 last wt=100.00>
<RefPosition #11  @19  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[t0-t2 s1-t5] minReg=1 last wt=400.00>
<RefPosition #12  @20  RefTypeDef <Ivl:5> CAST BB01 regmask=[t0-t2 s1-t5] minReg=1 wt=400.00>
<RefPosition #13  @23  RefTypeUse <Ivl:5> BB01 regmask=[t0-t2 s1-t5] minReg=1 last wt=100.00>
<RefPosition #14  @24  RefTypeDef <Ivl:6> LSH BB01 regmask=[t0-t2 s1-t5] minReg=1 wt=400.00>
<RefPosition #15  @27  RefTypeDef <Ivl:7 internal> IND BB01 regmask=[t0-t2 s1-t5] minReg=1 wt=400.00>
<RefPosition #16  @27  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[t0-t2 s1-t5] minReg=1 last wt=400.00>
<RefPosition #17  @27  RefTypeUse <Ivl:6> BB01 regmask=[t0-t2 s1-t5] minReg=1 last wt=100.00>
<RefPosition #18  @27  RefTypeUse <Ivl:7 internal> IND BB01 regmask=[t0-t2 s1-t5] minReg=1 last wt=400.00>
<RefPosition #19  @28  RefTypeDef <Ivl:8> IND BB01 regmask=[a0] minReg=1 wt=400.00>
<RefPosition #20  @29  RefTypeFixedReg <Reg:a0 > BB01 regmask=[a0] minReg=1 wt=100.00>
<RefPosition #21  @29  RefTypeUse <Ivl:8> BB01 regmask=[a0] minReg=1 last fixed wt=100.00>
<RefPosition #22  @31  RefTypeBB BB02 regmask=[] minReg=1 wt=0.00>
<RefPosition #23  @34  RefTypeDef <Ivl:9> CNS_INT BB02 regmask=[t0-t2 s1-t5] minReg=1 wt=0.00>
<RefPosition #24  @35  RefTypeUse <Ivl:9> BB02 regmask=[t0-t2 s1-t5] minReg=1 last wt=0.00>
<RefPosition #25  @36  RefTypeKill BB02 regmask=[t0-t2 a0-a7 t3-t6] minReg=1>

VAR REFPOSITIONS BEFORE ALLOCATION
--- V00  (Interval 0)
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V00> BB00 regmask=[a0] minReg=1 fixed regOptional wt=100.00>
<RefPosition #3   @11  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[t0-t2 s1-t5] minReg=1 wt=400.00>
<RefPosition #16  @27  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[t0-t2 s1-t5] minReg=1 last wt=400.00>
--- V01  (Interval 1)
<RefPosition #1   @0   RefTypeParamDef <Ivl:1 V01> BB00 regmask=[a1] minReg=1 fixed regOptional wt=100.00>
<RefPosition #9   @13  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[t0-t2 s1-t5] minReg=1 wt=400.00>
<RefPosition #11  @19  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[t0-t2 s1-t5] minReg=1 last wt=400.00>
--- V02



Allocating Registers
--------------------
The following table has one or more rows for each RefPosition that is handled during allocation.
The columns are: (1) Loc: LSRA location, (2) RP#: RefPosition number, (3) Name, (4) Type (e.g. Def, Use,
Fixd, Parm, DDef (Dummy Def), ExpU (Exposed Use), Kill) followed by a '*' if it is a last use, and a 'D'
if it is delayRegFree, (5) Action taken during allocation. Some actions include (a) Alloc a new register,
(b) Keep an existing register, (c) Spill a register, (d) ReLod (Reload) a register. If an ALL-CAPS name
such as COVRS is displayed, it is a score name from lsra_score.h, with a trailing '(A)' indicating alloc,
'(C)' indicating copy, and '(R)' indicating re-use. See dumpLsraAllocationEvent() for details.
The subsequent columns show the Interval occupying each register, if any, followed by 'a' if it is
active, 'p' if it is a large vector that has been partially spilled, and 'i' if it is inactive.
Columns are only printed up to the last modified register, which may increase during allocation,
in which case additional columns will appear. Registers which are not marked modified have ---- in
their column.

------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+
TreeID   LocRP# Name Type  Action    Reg  |t0  |t1  |a0  |a1  |a2  |a3  |a4  |a5  |a6  |a7  |t3  |
------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+
                                          |    |    |V00a|V01a|    |    |    |    |    |    |    |
          0.#0  V00  Parm   Keep     a0   |    |    |V00a|V01a|    |    |    |    |    |    |    |
          0.#1  V01  Parm   Keep     a1   |    |    |V00a|V01a|    |    |    |    |    |    |    |
          1.#2  BB1 PredBB0               |    |    |V00a|V01a|    |    |    |    |    |    |    |
[000007] 11.#3  V00  Use    Keep     a0   |    |    |V00a|V01a|    |    |    |    |    |    |    |
         12.#4  I2   Def    ORDER(A) a2   |    |    |V00a|V01a|I2 a|    |    |    |    |    |    |
[000008] 13.#5  I3   Def    ORDER(A) a3   |    |    |V00a|V01a|I2 a|I3 a|    |    |    |    |    |
         13.#6  I4   Def    ORDER(A) a4   |    |    |V00a|V01a|I2 a|I3 a|I4 a|    |    |    |    |
         13.#7  I3   Use *  Keep     a3   |    |    |V00a|V01a|I2 a|I3 a|I4 a|    |    |    |    |
         13.#8  I4   Use *  Keep     a4   |    |    |V00a|V01a|I2 a|I3 a|I4 a|    |    |    |    |
         13.#9  V01  Use    Keep     a1   |    |    |V00a|V01a|I2 a|I3 a|I4 a|    |    |    |    |
         13.#10 I2   Use *  Keep     a2   |    |    |V00a|V01a|I2 a|I3 a|I4 a|    |    |    |    |
[000009] 19.#11 V01  Use *  Keep     a1   |    |    |V00a|V01a|    |    |    |    |    |    |    |
         20.#12 I5   Def    ORDER(A) a1   |    |    |V00a|I5 a|    |    |    |    |    |    |    |
[000011] 23.#13 I5   Use *  Keep     a1   |    |    |V00a|I5 a|    |    |    |    |    |    |    |
         24.#14 I6   Def    ORDER(A) a1   |    |    |V00a|I6 a|    |    |    |    |    |    |    |
[000019] 27.#15 I7   Def    ORDER(A) a2   |    |    |V00a|I6 a|I7 a|    |    |    |    |    |    |
         27.#16 V00  Use *  Keep     a0   |    |    |V00a|I6 a|I7 a|    |    |    |    |    |    |
         27.#17 I6   Use *  Keep     a1   |    |    |V00a|I6 a|I7 a|    |    |    |    |    |    |
         27.#18 I7   Use *  Keep     a2   |    |    |V00a|I6 a|I7 a|    |    |    |    |    |    |
         28.#19 I8   Def    Alloc    a0   |    |    |I8 a|    |    |    |    |    |    |    |    |
[000004] 29.#20 a0   Fixd   Keep     a0   |    |    |I8 a|    |    |    |    |    |    |    |    |
         29.#21 I8   Use *  Keep     a0   |    |    |I8 a|    |    |    |    |    |    |    |    |
------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+
TreeID   LocRP# Name Type  Action    Reg  |t0  |t1  |a0  |a1  |a2  |a3  |a4  |a5  |a6  |a7  |t3  |
------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+
         31.#22 BB2 PredBB0               |    |    |    |    |    |    |    |    |    |    |    |
[000024] 34.#23 C9   Def    ORDER(A) a0   |    |    |C9 a|    |    |    |    |    |    |    |    |
[000023] 35.#24 C9   Use *  Keep     a0   |    |    |C9 a|    |    |    |    |    |    |    |    |
         36.#25      Kill   None     [t0-t2 a0-a7 t3-t6]
                                          |    |    |    |    |    |    |    |    |    |    |    |

------------
REFPOSITIONS AFTER ALLOCATION: 
------------
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V00> BB00 regmask=[a0] minReg=1 fixed regOptional wt=100.00>
<RefPosition #1   @0   RefTypeParamDef <Ivl:1 V01> BB00 regmask=[a1] minReg=1 fixed regOptional wt=100.00>
<RefPosition #2   @1   RefTypeBB BB01 regmask=[] minReg=1 wt=100.00>
<RefPosition #3   @11  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[a0] minReg=1 wt=400.00>
<RefPosition #4   @12  RefTypeDef <Ivl:2> IND BB01 regmask=[a2] minReg=1 wt=400.00>
<RefPosition #5   @13  RefTypeDef <Ivl:3 internal> BOUNDS_CHECK BB01 regmask=[a3] minReg=1 wt=400.00>
<RefPosition #6   @13  RefTypeDef <Ivl:4 internal> BOUNDS_CHECK BB01 regmask=[a4] minReg=1 wt=400.00>
<RefPosition #7   @13  RefTypeUse <Ivl:3 internal> BOUNDS_CHECK BB01 regmask=[a3] minReg=1 last wt=400.00>
<RefPosition #8   @13  RefTypeUse <Ivl:4 internal> BOUNDS_CHECK BB01 regmask=[a4] minReg=1 last wt=400.00>
<RefPosition #9   @13  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[a1] minReg=1 wt=400.00>
<RefPosition #10  @13  RefTypeUse <Ivl:2> BB01 regmask=[a2] minReg=1 last wt=100.00>
<RefPosition #11  @19  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[a1] minReg=1 last wt=400.00>
<RefPosition #12  @20  RefTypeDef <Ivl:5> CAST BB01 regmask=[a1] minReg=1 wt=400.00>
<RefPosition #13  @23  RefTypeUse <Ivl:5> BB01 regmask=[a1] minReg=1 last wt=100.00>
<RefPosition #14  @24  RefTypeDef <Ivl:6> LSH BB01 regmask=[a1] minReg=1 wt=400.00>
<RefPosition #15  @27  RefTypeDef <Ivl:7 internal> IND BB01 regmask=[a2] minReg=1 wt=400.00>
<RefPosition #16  @27  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[a0] minReg=1 last wt=400.00>
<RefPosition #17  @27  RefTypeUse <Ivl:6> BB01 regmask=[a1] minReg=1 last wt=100.00>
<RefPosition #18  @27  RefTypeUse <Ivl:7 internal> IND BB01 regmask=[a2] minReg=1 last wt=400.00>
<RefPosition #19  @28  RefTypeDef <Ivl:8> IND BB01 regmask=[a0] minReg=1 wt=400.00>
<RefPosition #20  @29  RefTypeFixedReg <Reg:a0 > BB01 regmask=[a0] minReg=1 wt=100.00>
<RefPosition #21  @29  RefTypeUse <Ivl:8> BB01 regmask=[a0] minReg=1 last fixed wt=100.00>
<RefPosition #22  @31  RefTypeBB BB02 regmask=[] minReg=1 wt=0.00>
<RefPosition #23  @34  RefTypeDef <Ivl:9> CNS_INT BB02 regmask=[a0] minReg=1 wt=0.00>
<RefPosition #24  @35  RefTypeUse <Ivl:9> BB02 regmask=[a0] minReg=1 last wt=0.00>
<RefPosition #25  @36  RefTypeKill BB02 regmask=[t0-t2 a0-a7 t3-t6] minReg=1>

VAR REFPOSITIONS AFTER ALLOCATION
--- V00  (Interval 0)
<RefPosition #0   @0   RefTypeParamDef <Ivl:0 V00> BB00 regmask=[a0] minReg=1 fixed regOptional wt=100.00>
<RefPosition #3   @11  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[a0] minReg=1 wt=400.00>
<RefPosition #16  @27  RefTypeUse <Ivl:0 V00> LCL_VAR BB01 regmask=[a0] minReg=1 last wt=400.00>
--- V01  (Interval 1)
<RefPosition #1   @0   RefTypeParamDef <Ivl:1 V01> BB00 regmask=[a1] minReg=1 fixed regOptional wt=100.00>
<RefPosition #9   @13  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[a1] minReg=1 wt=400.00>
<RefPosition #11  @19  RefTypeUse <Ivl:1 V01> LCL_VAR BB01 regmask=[a1] minReg=1 last wt=400.00>
--- V02

Active intervals at end of allocation:

-----------------------
RESOLVING BB BOUNDARIES
-----------------------
Resolution Candidates: {V00 V01}
Has No Critical Edges

Prior to Resolution

BB01
use: {V00 V01}
def: {}
 in: {V00 V01}
out: {}
Var=Reg beg of BB01: V00=a0 V01=a1 
Var=Reg end of BB01: none

BB02
use: {}
def: {}
 in: {}
out: {}
Var=Reg beg of BB02: none
Var=Reg end of BB02: none


RESOLVING EDGES
  Set V00 argument initial register to a0
  Set V01 argument initial register to a1
Trees after linear scan register allocator (LSRA)

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    [000..004)                           (return)                     i LIR idxlen
BB02 [0001]  0                             0    [???..???)                           (throw )                     i LIR rare keep internal
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..004) (return), preds={} succs={}
N003 (???,???) [000020] -----------                            IL_OFFSET void   INLRT @ 0x000[E-] REG NA
N005 (  1,  1) [000001] -----+-----                    t1 =    LCL_VAR   int    V01 arg1         u:1 a1 REG a1 $c0
N007 (  1,  1) [000000] -----+-----                    t0 =    LCL_VAR   ref    V00 arg0         u:1 a0 REG a0 $80
                                                            /--*  t0     ref    
N009 (???,???) [000022] -c---------                   t22 = *  LEA(b+8)  byref  REG NA
                                                            /--*  t22    byref  
N011 (  3,  3) [000007] ---X-+-----                    t7 = *  IND       int    REG a2
                                                            /--*  t1     int    
                                                            +--*  t7     int    
N013 (  8, 11) [000008] ---X-+-----                         *  BOUNDS_CHECK_Rng void   REG NA $145
N015 (  1,  1) [000005] -----+-----                    t5 =    LCL_VAR   ref    V00 arg0         u:1 a0 (last use) REG a0 $80
N017 (  1,  1) [000006] -----+-----                    t6 =    LCL_VAR   int    V01 arg1         u:1 a1 (last use) REG a1 $c0
                                                            /--*  t6     int    
N019 (  2,  5) [000009] -----+---U-                    t9 = *  CAST      long <- uint REG a1 $1c0
N021 (  1,  4) [000010] -c---+-N---                   t10 =    CNS_INT   long   2 REG NA $200
                                                            /--*  t9     long   
                                                            +--*  t10    long   
N023 (  4, 10) [000011] -----+-----                   t11 = *  LSH       long   REG a1 $1c1
                                                            /--*  t5     ref    
                                                            +--*  t11    long   
N025 (  5, 11) [000014] -c---+-----                   t14 = *  LEA(b+(i*1)+16) byref  REG NA
                                                            /--*  t14    byref  
N027 (  8, 13) [000019] n---G+-----                   t19 = *  IND       int    REG a0 <l:$181, c:$c2>
                                                            /--*  t19    int    
N029 ( 17, 25) [000004] ---XG+-----                         *  RETURN    int    REG NA $145

------------ BB02 [0001] [???..???) (throw), preds={} succs={}
N033 (  1,  4) [000024] H----------                   t24 =    CNS_INT(h) long   0x7de2d71a3f40 ftn REG a0
                                                            /--*  t24    long   control expr
N035 (???,???) [000023] --CXG------                         *  CALL help void   CORINFO_HELP_RNGCHKFAIL REG NA

-------------------------------------------------------------------------------------------------------------------

Final allocation
------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+
TreeID   LocRP# Name Type  Action    Reg  |t0  |t1  |a0  |a1  |a2  |a3  |a4  |a5  |a6  |a7  |t3  |
------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+
          0.#0  V00  Parm   Alloc    a0   |    |    |V00a|    |    |    |    |    |    |    |    |
          0.#1  V01  Parm   Alloc    a1   |    |    |V00a|V01a|    |    |    |    |    |    |    |
          1.#2  BB1 PredBB0               |    |    |V00a|V01a|    |    |    |    |    |    |    |
[000007] 11.#3  V00  Use    Keep     a0   |    |    |V00a|V01a|    |    |    |    |    |    |    |
         12.#4  I2   Def    Alloc    a2   |    |    |V00a|V01a|I2 a|    |    |    |    |    |    |
[000008] 13.#5  I3   Def    Alloc    a3   |    |    |V00a|V01a|I2 a|I3 a|    |    |    |    |    |
         13.#6  I4   Def    Alloc    a4   |    |    |V00a|V01a|I2 a|I3 a|I4 a|    |    |    |    |
         13.#7  I3   Use *  Keep     a3   |    |    |V00a|V01a|I2 a|I3 i|I4 a|    |    |    |    |
         13.#8  I4   Use *  Keep     a4   |    |    |V00a|V01a|I2 a|    |I4 i|    |    |    |    |
         13.#9  V01  Use    Keep     a1   |    |    |V00a|V01a|I2 a|    |    |    |    |    |    |
         13.#10 I2   Use *  Keep     a2   |    |    |V00a|V01a|I2 i|    |    |    |    |    |    |
[000009] 19.#11 V01  Use *  Keep     a1   |    |    |V00a|V01i|    |    |    |    |    |    |    |
         20.#12 I5   Def    Alloc    a1   |    |    |V00a|I5 a|    |    |    |    |    |    |    |
[000011] 23.#13 I5   Use *  Keep     a1   |    |    |V00a|I5 i|    |    |    |    |    |    |    |
         24.#14 I6   Def    Alloc    a1   |    |    |V00a|I6 a|    |    |    |    |    |    |    |
[000019] 27.#15 I7   Def    Alloc    a2   |    |    |V00a|I6 a|I7 a|    |    |    |    |    |    |
         27.#16 V00  Use *  Keep     a0   |    |    |V00i|I6 a|I7 a|    |    |    |    |    |    |
         27.#17 I6   Use *  Keep     a1   |    |    |    |I6 i|I7 a|    |    |    |    |    |    |
         27.#18 I7   Use *  Keep     a2   |    |    |    |    |I7 i|    |    |    |    |    |    |
         28.#19 I8   Def    Alloc    a0   |    |    |I8 a|    |    |    |    |    |    |    |    |
[000004] 29.#20 a0   Fixd   Keep     a0   |    |    |I8 a|    |    |    |    |    |    |    |    |
         29.#21 I8   Use *  Keep     a0   |    |    |I8 i|    |    |    |    |    |    |    |    |
------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+
TreeID   LocRP# Name Type  Action    Reg  |t0  |t1  |a0  |a1  |a2  |a3  |a4  |a5  |a6  |a7  |t3  |
------------------------------------------+----+----+----+----+----+----+----+----+----+----+----+
         31.#22 BB2 PredBB0               |    |    |    |    |    |    |    |    |    |    |    |
[000024] 34.#23 C9   Def    Alloc    a0   |    |    |C9 a|    |    |    |    |    |    |    |    |
[000023] 35.#24 C9   Use *  Keep     a0   |    |    |C9 i|    |    |    |    |    |    |    |    |
         36.#25      Kill   None     [t0-t2 a0-a7 t3-t6]
                                          |    |    |    |    |    |    |    |    |    |    |    |

Recording the maximum number of concurrent spills:

----------
LSRA Stats
----------
Register selection order: ABCDEFGHIJKLMNOPQ
Total Tracked Vars:  2
Total Reg Cand Vars: 2
Total number of Intervals: 9
Total number of RefPositions: 25
Total Number of spill temps created: 0
..........
BB01 [  100.00]: REG_ORDER = 6
BB02 [    0.00]: REG_ORDER = 1
..........
Total SpillCount : 0   Weighted: 0.000000
Total CopyReg : 0   Weighted: 0.000000
Total ResolutionMovs : 0   Weighted: 0.000000
Total SplitEdges : 0   Weighted: 0.000000
..........
Total REG_ORDER [#13] : 7   Weighted: 600.000000

TUPLE STYLE DUMP WITH REGISTER ASSIGNMENTS
Incoming Parameters:  V00(a0) V01(a1)
BB01 [0000] [000..004) (return), preds={} succs={}
=====
  N003.                    IL_OFFSET INLRT @ 0x000[E-]
  N005.                    V01(a1)
  N007.                    V00(a0)
  N009. STK             =  LEA(b+8) ; a0
  N011. a2              =  IND      ; STK
  N013.                    BOUNDS_CHECK_Rng; a1,a2
  N015.                    V00(a0*)
  N017.                    V01(a1*)
  N019. a1              =  CAST     ; a1*
  N021.                    CNS_INT   2
  N023. a1              =  LSH      ; a1
  N025. STK             =  LEA(b+(i*1)+16); a0*,a1
  N027. a0              =  IND      ; STK
  N029.                    RETURN   ; a0
Var=Reg end of BB01: none

BB02 [0001] [???..???) (throw), preds={} succs={}
=====
Predecessor for variable locations: BB00
Var=Reg beg of BB02: none
  N033. a0              =  CNS_INT(h) 0x7de2d71a3f40 ftn
  N035.                    CALL help; a0
Var=Reg end of BB02: none




*************** Finishing PHASE Linear scan register alloc
Trees after Linear scan register alloc

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    [000..004)                           (return)                     i LIR idxlen
BB02 [0001]  0                             0    [???..???)                           (throw )                     i LIR rare keep internal
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..004) (return), preds={} succs={}
N003 (???,???) [000020] -----------                            IL_OFFSET void   INLRT @ 0x000[E-] REG NA
N005 (  1,  1) [000001] -----+-----                    t1 =    LCL_VAR   int    V01 arg1         u:1 a1 REG a1 $c0
N007 (  1,  1) [000000] -----+-----                    t0 =    LCL_VAR   ref    V00 arg0         u:1 a0 REG a0 $80
                                                            /--*  t0     ref    
N009 (???,???) [000022] -c---------                   t22 = *  LEA(b+8)  byref  REG NA
                                                            /--*  t22    byref  
N011 (  3,  3) [000007] ---X-+-----                    t7 = *  IND       int    REG a2
                                                            /--*  t1     int    
                                                            +--*  t7     int    
N013 (  8, 11) [000008] ---X-+-----                         *  BOUNDS_CHECK_Rng void   REG NA $145
N015 (  1,  1) [000005] -----+-----                    t5 =    LCL_VAR   ref    V00 arg0         u:1 a0 (last use) REG a0 $80
N017 (  1,  1) [000006] -----+-----                    t6 =    LCL_VAR   int    V01 arg1         u:1 a1 (last use) REG a1 $c0
                                                            /--*  t6     int    
N019 (  2,  5) [000009] -----+---U-                    t9 = *  CAST      long <- uint REG a1 $1c0
N021 (  1,  4) [000010] -c---+-N---                   t10 =    CNS_INT   long   2 REG NA $200
                                                            /--*  t9     long   
                                                            +--*  t10    long   
N023 (  4, 10) [000011] -----+-----                   t11 = *  LSH       long   REG a1 $1c1
                                                            /--*  t5     ref    
                                                            +--*  t11    long   
N025 (  5, 11) [000014] -c---+-----                   t14 = *  LEA(b+(i*1)+16) byref  REG NA
                                                            /--*  t14    byref  
N027 (  8, 13) [000019] n---G+-----                   t19 = *  IND       int    REG a0 <l:$181, c:$c2>
                                                            /--*  t19    int    
N029 ( 17, 25) [000004] ---XG+-----                         *  RETURN    int    REG NA $145

------------ BB02 [0001] [???..???) (throw), preds={} succs={}
N033 (  1,  4) [000024] H----------                   t24 =    CNS_INT(h) long   0x7de2d71a3f40 ftn REG a0
                                                            /--*  t24    long   control expr
N035 (???,???) [000023] --CXG------                         *  CALL help void   CORINFO_HELP_RNGCHKFAIL REG NA

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
[deferred prior check failed -- skipping this check]

*************** Starting PHASE Optimize layout
*************** In fgDoReversePostOrderLayout()

Initial BasicBlocks
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    [000..004)                           (return)                     i LIR idxlen
BB02 [0001]  0                             0    [???..???)                           (throw )                     i LIR rare keep internal
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

*************** In fgMoveColdBlocks()

Initial BasicBlocks
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    [000..004)                           (return)                     i LIR idxlen
BB02 [0001]  0                             0    [???..???)                           (throw )                     i LIR rare keep internal
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

*************** In fgSearchImprovedLayout()

Initial BasicBlocks
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    [000..004)                           (return)                     i LIR idxlen
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
BB02 [0001]  0                             0    [???..???)                           (throw )                     i LIR rare keep internal
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Not enough blocks to partition anything. Skipping reordering.

*************** Finishing PHASE Optimize layout
Trees after Optimize layout

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    [000..004)                           (return)                     i LIR idxlen
BB02 [0001]  0                             0    [???..???)                           (throw )                     i LIR rare keep internal
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------ BB01 [0000] [000..004) (return), preds={} succs={}
N003 (???,???) [000020] -----------                            IL_OFFSET void   INLRT @ 0x000[E-] REG NA
N005 (  1,  1) [000001] -----+-----                    t1 =    LCL_VAR   int    V01 arg1         u:1 a1 REG a1 $c0
N007 (  1,  1) [000000] -----+-----                    t0 =    LCL_VAR   ref    V00 arg0         u:1 a0 REG a0 $80
                                                            /--*  t0     ref    
N009 (???,???) [000022] -c---------                   t22 = *  LEA(b+8)  byref  REG NA
                                                            /--*  t22    byref  
N011 (  3,  3) [000007] ---X-+-----                    t7 = *  IND       int    REG a2
                                                            /--*  t1     int    
                                                            +--*  t7     int    
N013 (  8, 11) [000008] ---X-+-----                         *  BOUNDS_CHECK_Rng void   REG NA $145
N015 (  1,  1) [000005] -----+-----                    t5 =    LCL_VAR   ref    V00 arg0         u:1 a0 (last use) REG a0 $80
N017 (  1,  1) [000006] -----+-----                    t6 =    LCL_VAR   int    V01 arg1         u:1 a1 (last use) REG a1 $c0
                                                            /--*  t6     int    
N019 (  2,  5) [000009] -----+---U-                    t9 = *  CAST      long <- uint REG a1 $1c0
N021 (  1,  4) [000010] -c---+-N---                   t10 =    CNS_INT   long   2 REG NA $200
                                                            /--*  t9     long   
                                                            +--*  t10    long   
N023 (  4, 10) [000011] -----+-----                   t11 = *  LSH       long   REG a1 $1c1
                                                            /--*  t5     ref    
                                                            +--*  t11    long   
N025 (  5, 11) [000014] -c---+-----                   t14 = *  LEA(b+(i*1)+16) byref  REG NA
                                                            /--*  t14    byref  
N027 (  8, 13) [000019] n---G+-----                   t19 = *  IND       int    REG a0 <l:$181, c:$c2>
                                                            /--*  t19    int    
N029 ( 17, 25) [000004] ---XG+-----                         *  RETURN    int    REG NA $145

------------ BB02 [0001] [???..???) (throw), preds={} succs={}
N033 (  1,  4) [000024] H----------                   t24 =    CNS_INT(h) long   0x7de2d71a3f40 ftn REG a0
                                                            /--*  t24    long   control expr
N035 (???,???) [000023] --CXG------                         *  CALL help void   CORINFO_HELP_RNGCHKFAIL REG NA

-------------------------------------------------------------------------------------------------------------------
*************** In fgDebugCheckBBlist
[deferred prior check failed -- skipping this check]

*************** Starting PHASE Optimize post-layout

*************** Finishing PHASE Optimize post-layout [no changes]

*************** Starting PHASE Determine first cold block
No procedure splitting will be done for this method

*************** Finishing PHASE Determine first cold block [no changes]
*************** In genGenerateCode()

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    [000..004)                           (return)                     i LIR idxlen
BB02 [0001]  0                             0    [???..???)                           (throw )                     i LIR rare keep internal
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

*************** Starting PHASE Generate code
*************** In fgDebugCheckBBlist
; Assembly listing for method Program:MemoryAccess(int[],int):int (FullOpts)
; Emitting BLENDED_CODE for generic RISCV64 - Unix
; FullOpts code
; optimized code
; fp based frame
; partially interruptible
; No PGO data
Finalizing stack frame
Recording Var Locations at start of BB01
  V00(a0)  V01(a1)
Modified regs: [t0-t2 a0-a7 t3-t6]
Callee-saved registers pushed: 2 [ra fp]
*************** In lvaAssignFrameOffsets(FINAL_FRAME_LAYOUT)
--- delta bump 16 for FP frame
--- virtual stack offset to actual stack offset delta is 16
-- V02 was 0, now 16
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  4,  4   )     ref  ->   a0         class-hnd single-def <int[]>
;  V01 arg1         [V01,T01] (  4,  4   )     int  ->   a1         single-def
;# V02 OutArgs      [V02    ] (  1,  1   )  struct ( 0) [sp+0x00]   do-not-enreg[XS] addr-exposed "OutgoingArgSpace" <Empty>
;
; Lcl frame size = 0
Created:
      G_M9971_IG02:        ; offs=0x000000, size=0x0000, bbWeight=1, gcrefRegs=0000 {}
Mark labels for codegen
  BB01 : first block
  BB02 : throw helper block
*************** After genMarkLabelsForCodegen()

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BBnum BBid ref try hnd preds           weight   [IL range]   [jump]                            [EH region]        [flags]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
BB01 [0000]  1                             1    [000..004)                           (return)                     i LIR label idxlen
BB02 [0001]  0                             0    [???..???)                           (throw )                     i LIR rare keep internal label
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

=============== Generating BB01 [0000] [000..004) (return), preds={} succs={} flags=0x00000200.00084011: i LIR label idxlen
BB01 IN (2)={V00 V01} + ByrefExposed + GcHeap
     OUT(0)={       }

Recording Var Locations at start of BB01
  V00(a0)  V01(a1)
Change life 0000000000000000 {} -> 0000000000000003 {V00 V01}
							V00 in reg a0 is becoming live  [------]
							Live regs: 0000000000000000 {} + {a0} => 0000000000000400 {a0}
Debug: New V00 debug range: first
							V01 in reg a1 is becoming live  [------]
							Live regs: 0000000000000400 {a0} + {a1} => 0000000000000C00 {a0 a1}
Debug: New V01 debug range: first
							Live regs: (unchanged) 0000000000000C00 {a0 a1}
							GC regs: (unchanged) 0400 {a0}
							Byref regs: (unchanged) 0000 {}

      L_M9971_BB01:
Label: G_M9971_IG02, GCvars=0000000000000000 {}, gcrefRegs=0400 {a0}, byrefRegs=0000 {}

Scope info: begin block BB01, IL range [000..004)
Added IP mapping: 0x0000 STACK_EMPTY (G_M9971_IG02,ins#0,ofs#0) label
Generating: N003 (???,???) [000020] -----------                            IL_OFFSET void   INLRT @ 0x000[E-] REG NA
Generating: N005 (  1,  1) [000001] -----+-----                    t1 =    LCL_VAR   int    V01 arg1         u:1 a1 REG a1 $c0
Generating: N007 (  1,  1) [000000] -----+-----                    t0 =    LCL_VAR   ref    V00 arg0         u:1 a0 REG a0 $80
                                                                        /--*  t0     ref    
Generating: N009 (???,???) [000022] -c---------                   t22 = *  LEA(b+8)  byref  REG NA
                                                                        /--*  t22    byref  
Generating: N011 (  3,  3) [000007] ---X-+-----                    t7 = *  IND       int    REG a2
Mapped BB01 to G_M9971_IG02
                                                                        /--*  t1     int    
                                                                        +--*  t7     int    
Generating: N013 (  8, 11) [000008] ---X-+-----                         *  BOUNDS_CHECK_Rng void   REG NA $145
Generating: N015 (  1,  1) [000005] -----+-----                    t5 =    LCL_VAR   ref    V00 arg0         u:1 a0 (last use) REG a0 $80
Generating: N017 (  1,  1) [000006] -----+-----                    t6 =    LCL_VAR   int    V01 arg1         u:1 a1 (last use) REG a1 $c0
                                                                        /--*  t6     int    
Generating: N019 (  2,  5) [000009] -----+---U-                    t9 = *  CAST      long <- uint REG a1 $1c0
							V01 in reg a1 is becoming dead  [000006]
							Live regs: 0000000000000C00 {a0 a1} - {a1} => 0000000000000400 {a0}
Debug: Closing V01 debug range.
							Live vars after [000006]: {V00 V01} -{V01} => {V00}
Generating: N021 (  1,  4) [000010] -c---+-N---                   t10 =    CNS_INT   long   2 REG NA $200
                                                                        /--*  t9     long   
                                                                        +--*  t10    long   
Generating: N023 (  4, 10) [000011] -----+-----                   t11 = *  LSH       long   REG a1 $1c1
                                                                        /--*  t5     ref    
                                                                        +--*  t11    long   
Generating: N025 (  5, 11) [000014] -c---+-----                   t14 = *  LEA(b+(i*1)+16) byref  REG NA
                                                                        /--*  t14    byref  
Generating: N027 (  8, 13) [000019] n---G+-----                   t19 = *  IND       int    REG a0 <l:$181, c:$c2>
							V00 in reg a0 is becoming dead  [000005]
							Live regs: 0000000000000400 {a0} - {a0} => 0000000000000000 {}
Debug: Closing V00 debug range.
							Live vars after [000005]: {V00} -{V00} => {}
							GC regs: 0400 {a0} => 0000 {}
                                                                        /--*  t19    int    
Generating: N029 ( 17, 25) [000004] ---XG+-----                         *  RETURN    int    REG NA $145
Added IP mapping: EPILOG (G_M9971_IG02,ins#9,ofs#36) label
Reserving epilog IG for block BB01
Saved:
      G_M9971_IG02:        ; offs=0x000000, size=0x0024, bbWeight=1, gcrefRegs=0400 {a0}, byrefRegs=0000 {}, BB01 [0000], byref
Created:
      G_M9971_IG03:        ; offs=0x000024, size=0x0000, bbWeight=1, gcrefRegs=0000 {}
Created:
      G_M9971_IG04:        ; offs=0x000124, size=0x0000, bbWeight=1, gcrefRegs=0000 {}, epilog
*************** After placeholder IG creation
G_M9971_IG01:        ; func=00, offs=0x000000, size=0x0000, bbWeight=1, gcrefRegs=0000 {} <-- Prolog IG
G_M9971_IG02:        ; offs=0x000000, size=0x0024, bbWeight=1, gcrefRegs=0400 {a0}, byrefRegs=0000 {}, BB01 [0000], byref
G_M9971_IG03:        ; epilog placeholder, next placeholder=<END>, BB01 [0000], epilog, extend <-- First placeholder <-- Last placeholder
                     ;   PrevGCVars=0000000000000000 {}, PrevGCrefRegs=0000 {}, PrevByrefRegs=0000 {}
                     ;   InitGCVars=0000000000000000 {}, InitGCrefRegs=0400 {a0}, InitByrefRegs=0000 {}
G_M9971_IG04:        ; offs=0x000124, size=0x0000, bbWeight=1, gcrefRegs=0000 {} <-- Current IG

Variable Live Range History Dump for BB01
V00 arg0: a0 [(G_M9971_IG02,ins#0,ofs#0), (G_M9971_IG02,ins#7,ofs#28)]
V01 arg1: a1 [(G_M9971_IG02,ins#0,ofs#0), (G_M9971_IG02,ins#4,ofs#16)]

=============== Generating BB02 [0001] [???..???) (throw), preds={} succs={} flags=0x00000000.00005039: i LIR rare keep internal label
BB02 IN (0)={}
     OUT(0)={}

Recording Var Locations at start of BB02
  <none>

Liveness not changing: 0000000000000000 {}
							Live regs: (unchanged) 0000000000000000 {}
							GC regs: (unchanged) 0000 {}
							Byref regs: (unchanged) 0000 {}

      L_M9971_BB02:
Label: G_M9971_IG04, GCvars=0000000000000000 {}, gcrefRegs=0000 {}, byrefRegs=0000 {}

Scope info: begin block BB02, IL range [???..???)
Scope info: ignoring block beginning
Added IP mapping: NO_MAP (G_M9971_IG04,ins#0,ofs#0) label
Generating: N033 (  1,  4) [000024] H----------                   t24 =    CNS_INT(h) long   0x7de2d71a3f40 ftn REG a0
Mapped BB02 to G_M9971_IG04
                                                                        /--*  t24    long   control expr
Generating: N035 (???,???) [000023] --CXG------                         *  CALL help void   CORINFO_HELP_RNGCHKFAIL REG NA
Call: GCvars=0000000000000000 {}, gcrefRegs=0000 {}, byrefRegs=0000 {}
Scope info: ignoring block end

Variable Live Range History Dump for BB02
..None..
Liveness not changing: 0000000000000000 {}

# compCycleEstimate =     17, compSizeEstimate =    25 Program:MemoryAccess(int[],int):int
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  4,  4   )     ref  ->   a0         class-hnd single-def <int[]>
;  V01 arg1         [V01,T01] (  4,  4   )     int  ->   a1         single-def
;# V02 OutArgs      [V02    ] (  1,  1   )  struct ( 0) [sp+0x00]   do-not-enreg[XS] addr-exposed "OutgoingArgSpace" <Empty>
;
; Lcl frame size = 0
*************** Before prolog / epilog generation
G_M9971_IG01:        ; func=00, offs=0x000000, size=0x0000, bbWeight=1, gcrefRegs=0000 {} <-- Prolog IG
G_M9971_IG02:        ; offs=0x000000, size=0x0024, bbWeight=1, gcrefRegs=0400 {a0}, byrefRegs=0000 {}, BB01 [0000], byref
G_M9971_IG03:        ; epilog placeholder, next placeholder=<END>, BB01 [0000], epilog, extend <-- First placeholder <-- Last placeholder
                     ;   PrevGCVars=0000000000000000 {}, PrevGCrefRegs=0000 {}, PrevByrefRegs=0000 {}
                     ;   InitGCVars=0000000000000000 {}, InitGCrefRegs=0400 {a0}, InitByrefRegs=0000 {}
G_M9971_IG04:        ; offs=0x000124, size=0x0000, bbWeight=0, gcrefRegs=0000 {}, BB02 [0001] <-- Current IG
Recording Var Locations at start of BB01
  V00(a0)  V01(a1)
Saved:
      G_M9971_IG04:        ; offs=0x000124, size=0x001C, bbWeight=0, gcVars=0000000000000000 {}, gcrefRegs=0000 {}, byrefRegs=0000 {}, BB02 [0001], gcvars, byref
*************** In genFnProlog()
Added IP mapping to front: PROLOG (G_M9971_IG01,ins#0,ofs#0) label

__prolog:
Debug: New V00 debug range: first
Debug: New V01 debug range: first
Frame info. #outsz=0; #framesz=16; LclFrameSize=0;
Save float regs: []
Save int   regs: []
Frame info. #outsz=0; #framesz=16; lcl=0
    offsetSpToSavedFp=0
*************** In genHomeRegisterParams()
2 registers in register parameter interference graph
  a0
  a1
*************** In genEnregisterIncomingStackArgs()
Debug: Closing V00 debug range.
Debug: Closing V01 debug range.

Saved:
      G_M9971_IG01:        ; offs=0x000000, size=0x0010, bbWeight=1, gcrefRegs=0000 {}, byrefRegs=0000 {}, byref, nogc
*************** In genFnEpilog()

__epilog:
gcVarPtrSetCur=0000000000000000 {}, gcRegGCrefSetCur=0400 {a0}, gcRegByrefSetCur=0000 {}
Frame type. #outsz=0; #framesz=16; #calleeSaveRegsPushed:2; localloc? false
    calleeSaveSPOffset=16
Saved:
      G_M9971_IG03:        ; offs=0x000024, size=0x0010, bbWeight=1, epilog, nogc, extend
0 prologs, 1 epilogs, 0 funclet prologs, 0 funclet epilogs
*************** After prolog / epilog generation
G_M9971_IG01:        ; func=00, offs=0x000000, size=0x0010, bbWeight=1, gcrefRegs=0000 {}, byrefRegs=0000 {}, byref, nogc <-- Prolog IG
G_M9971_IG02:        ; offs=0x000010, size=0x0024, bbWeight=1, gcrefRegs=0400 {a0}, byrefRegs=0000 {}, BB01 [0000], byref
G_M9971_IG03:        ; offs=0x000034, size=0x0010, bbWeight=1, epilog, nogc, extend
G_M9971_IG04:        ; offs=0x000044, size=0x001C, bbWeight=0, gcVars=0000000000000000 {}, gcrefRegs=0000 {}, byrefRegs=0000 {}, BB02 [0001], gcvars, byref
*************** In emitJumpDistBind()
 to G_M9971_IG04
Estimate of fwd jump [5566300C/004]: 001C -> 0044 = 0028

*************** Finishing PHASE Generate code

*************** Starting PHASE Emit code

Hot  code size = 0x60 bytes
Cold code size = 0x0 bytes
reserveUnwindInfo(isFunclet=false, isColdCode=false, unwindSize=0x14)
*************** In emitEndCodeGen()
Converting emitMaxStackDepth from bytes (0) to elements (0)

***************************************************************************
Instructions as they come out of the scheduler


G_M9971_IG01:        ; offs=0x000000, size=0x0010, bbWeight=1, gcrefRegs=0000 {}, byrefRegs=0000 {}, byref, nogc <-- Prolog IG
IN0011: 000000      addi           sp, sp, -16
IN0012: 000004      sd             fp, 0(sp)
IN0013: 000008      sd             ra, 8(sp)
IN0014: 00000C      mv             fp, sp
						;; size=16 bbWeight=1 PerfScore 0.00
G_M9971_IG02:        ; offs=0x000010, size=0x0024, bbWeight=1, gcrefRegs=0400 {a0}, byrefRegs=0000 {}, BB01 [0000], byref
                             ; gcrRegs +[a0]
IN0001: 000010      lw             a2, 8(a0)
IN0002: 000014      sext.w         a3, a2
IN0003: 000018      sext.w         a4, a1
IN0004: 00001C      bgeu           a4, a3, G_M9971_IG04
IN0005: 000020      slli           a1, a1, 32
IN0006: 000024      srli           a1, a1, 32
IN0007: 000028      slli           a1, a1, 2
IN0008: 00002C      add            a2, a0, a1
                             ; byrRegs +[a2]
IN0009: 000030      lw             a0, 16(a2)
                             ; gcrRegs -[a0]
						;; size=36 bbWeight=1 PerfScore 0.00
G_M9971_IG03:        ; offs=0x000034, size=0x0010, bbWeight=1, epilog, nogc, extend
IN0015: 000034      ld             ra, 8(sp)
IN0016: 000038      ld             fp, 0(sp)
IN0017: 00003C      addi           sp, sp, 16
IN0018: 000040      ret						;; size=16 bbWeight=1 PerfScore 0.00
G_M9971_IG04:        ; offs=0x000044, size=0x001C, bbWeight=0, gcVars=0000000000000000 {}, gcrefRegs=0000 {}, byrefRegs=0000 {}, BB02 [0001], gcvars, byref
                             ; byrRegs -[a2]
IN000a: 000044      lui            a0, 515629
IN000b: 000048      addiw          a0, a0, 1818
IN000c: 00004C      slli           a0, a0, 11
IN000d: 000050      addi           a0, a0, 506
IN000e: 000054      slli           a0, a0, 5
; Call at 0058 [stk=0], GCvars=none, gcrefRegs=0000 {}, byrefRegs=0000 {}
IN000f: 000058      jalr           ra, 0(a0)		// CORINFO_HELP_RNGCHKFAIL
IN0010: 00005C      ebreak
						;; size=28 bbWeight=0 PerfScore 0.00


Allocated method code size =   96 , actual size =   96, unused size =    0

; Total bytes of code 96, prolog size 16, PerfScore 0.00, instruction count 24, allocated bytes for code 96 (MethodHash=1491d90c) for method Program:MemoryAccess(int[],int):int (FullOpts)
; ============================================================

*************** After end code gen, before unwindEmit()
G_M9971_IG01:        ; func=00, offs=0x000000, size=0x0010, bbWeight=1, PerfScore 0.00, gcrefRegs=0000 {}, byrefRegs=0000 {}, byref, nogc <-- Prolog IG


G_M9971_IG02:        ; offs=0x000010, size=0x0024, bbWeight=1, PerfScore 0.00, gcrefRegs=0400 {a0}, byrefRegs=0000 {}, BB01 [0000], byref


G_M9971_IG03:        ; offs=0x000034, size=0x0010, bbWeight=1, PerfScore 0.00, epilog, nogc, extend


G_M9971_IG04:        ; offs=0x000044, size=0x001C, bbWeight=0, PerfScore 0.00, gcVars=0000000000000000 {}, gcrefRegs=0000 {}, byrefRegs=0000 {}, BB02 [0001], gcvars, byref



*************** Finishing PHASE Emit code

*************** Starting PHASE Emit GC+EH tables
Unwind Info:
  >> Start offset   : 0x000000 (not in unwind data)
  >>   End offset   : 0x000060 (not in unwind data)
  Code Words        : 3
  Epilog Count      : 1
  E bit             : 0
  X bit             : 0
  Vers              : 0
  Function Length   : 24 (0x00018) Actual length = 96 (0x000060)
  ---- Epilog scopes ----
  ---- Scope 0
  Epilog Start Offset        : 13 (0x0000d) Actual offset = 52 (0x000034) Offset from main function begin = 52 (0x000034)
  Epilog Start Index         : 1 (0x01)
  ---- Unwind codes ----
    E1          set_fp; move fp, sp
    ---- Epilog start at index 1 ----
    D0 00 01      save_reg X#0 Z#1 (0x01); sd ra, sp, 8
    D0 07 00      save_reg X#7 Z#0 (0x00); sd fp, sp, 0
    01          alloc_s #1 (0x01); addi sp, sp, -16 (0x010)
    E4          end
    E4          end
    E4          end
    E4          end

allocUnwindInfo(pHotCode=0x0x7de2d73f2778, pColdCode=0x(nil), startOffset=0x0, endOffset=0x60, unwindSize=0x14, pUnwindBlock=0x0x55555565c70c, funKind=0 (main function))
*************** In genIPmappingGen()
IP mapping count : 4
IL offs PROLOG : 0x00000000 ( STACK_EMPTY )
IL offs 0x0000 : 0x00000010 ( STACK_EMPTY )
IL offs EPILOG : 0x00000034 ( STACK_EMPTY )
IL offs NO_MAP : 0x00000044 ( STACK_EMPTY )

*************** In genSetScopeInfo()
VarLocInfo count is 4
; Variable debug info: 2 live ranges, 2 vars for method Program:MemoryAccess(int[],int):int
(V00 arg0) : From 00000000h to 0000002Ch, in a0
(V01 arg1) : From 00000000h to 00000020h, in a1
*************** In gcInfoBlockHdrSave()
Set code length to 96.
Set stack base register to fp.
Set Outgoing stack arg area size to 0.
Defining 1 call sites:
    Offset 0x58, size 4.

*************** Finishing PHASE Emit GC+EH tables
Method code size: 96

Allocations for Program:MemoryAccess(int[],int):int (MethodHash=1491d90c)
count:        473, size:      63806, max =       6240
allocateMemory:     131072, nraUsed:      67096

Alloc'd bytes by kind:
                  kind |       size |     pct
  ---------------------+------------+--------
                   ABI |        152 |   0.24%
         AssertionProp |       6644 |  10.41%
               ASTNode |       3024 |   4.74%
              InstDesc |       7164 |  11.23%
              ImpStack |        384 |   0.60%
            BasicBlock |        952 |   1.49%
              CallArgs |          0 |   0.00%
              FlowEdge |          0 |   0.00%
      DepthFirstSearch |        208 |   0.33%
                 Loops |        164 |   0.26%
     TreeStatementList |          0 |   0.00%
               SiScope |          0 |   0.00%
       DominatorMemory |        128 |   0.20%
                  LSRA |       8172 |  12.81%
         LSRA_Interval |        960 |   1.50%
      LSRA_RefPosition |       2080 |   3.26%
          Reachability |         40 |   0.06%
                   SSA |        328 |   0.51%
           ValueNumber |      12408 |  19.45%
              LvaTable |       1596 |   2.50%
            UnwindInfo |         40 |   0.06%
                hashBv |         40 |   0.06%
                bitset |         32 |   0.05%
          FixedBitVect |         16 |   0.03%
               Generic |        686 |   1.08%
   LocalAddressVisitor |         40 |   0.06%
         FieldSeqStore |          0 |   0.00%
          MemorySsaMap |          0 |   0.00%
          MemoryPhiArg |          0 |   0.00%
                   CSE |       1816 |   2.85%
                    GC |       1293 |   2.03%
       CorTailCallInfo |          0 |   0.00%
              Inlining |        448 |   0.70%
            ArrayStack |        128 |   0.20%
             DebugInfo |        272 |   0.43%
             DebugOnly |      11453 |  17.95%
               Codegen |       1168 |   1.83%
               LoopOpt |          0 |   0.00%
             LoopClone |          0 |   0.00%
            LoopUnroll |          0 |   0.00%
             LoopHoist |          0 |   0.00%
            LoopIVOpts |          0 |   0.00%
               Unknown |        250 |   0.39%
            RangeCheck |        336 |   0.53%
              CopyProp |        424 |   0.66%
             Promotion |        120 |   0.19%
           SideEffects |          0 |   0.00%
       ObjectAllocator |          0 |   0.00%
    VariableLiveRanges |        648 |   1.02%
           ClassLayout |         88 |   0.14%
       TailMergeThrows |          0 |   0.00%
             EarlyProp |          0 |   0.00%
              ZeroInit |        104 |   0.16%
                   Pgo |          0 |   0.00%
     MaskConversionOpt |          0 |   0.00%
        TryRegionClone |          0 |   0.00%
     RangeCheckCloning |          0 |   0.00%

Final metrics:
ActualCodeBytes                           : 96
AllocatedHotCodeBytes                     : 96
AllocatedColdCodeBytes                    : 0
ReadOnlyDataBytes                         : 0
GCInfoBytes                               : 3
EHClauseCount                             : 0
PhysicallyPromotedFields                  : 0
LoopsFoundDuringOpts                      : 0
LoopsInverted                             : 0
LoopsCloned                               : 0
LoopsUnrolled                             : 0
LoopAlignmentCandidates                   : 0
LoopsAligned                              : 0
LoopsIVWidened                            : 0
WidenedIVs                                : 0
UnusedIVsRemoved                          : 0
LoopsMadeDownwardsCounted                 : 0
LoopsStrengthReduced                      : 0
VarsInSsa                                 : 2
HoistedExpressions                        : 0
RedundantBranchesEliminated               : 0
JumpThreadingsPerformed                   : 0
CseCount                                  : 0
BasicBlocksAtCodegen                      : 2
PerfScore                                 : 0.000000
BytesAllocated                            : 67096
ImporterBranchFold                        : 0
ImporterSwitchFold                        : 0
DevirtualizedCall                         : 0
DevirtualizedCallUnboxedEntry             : 0
DevirtualizedCallRemovedBox               : 0
GDV                                       : 0
ClassGDV                                  : 0
MethodGDV                                 : 0
MultiGuessGDV                             : 0
ChainedGDV                                : 0
EnumeratorGDV                             : 0
InlinerBranchFold                         : 0
InlineAttempt                             : 0
InlineCount                               : 0
ProfileConsistentBeforeInline             : 0
ProfileConsistentAfterInline              : 0
ProfileConsistentBeforeMorph              : 0
ProfileConsistentAfterMorph               : 0
ProfileSynthesizedBlendedOrRepaired       : 0
ProfileInconsistentInitially              : 0
ProfileInconsistentResetLeave             : 0
ProfileInconsistentImporterBranchFold     : 0
ProfileInconsistentImporterSwitchFold     : 0
ProfileInconsistentChainedGDV             : 0
ProfileInconsistentScratchBB              : 0
ProfileInconsistentInlinerBranchFold      : 0
ProfileInconsistentInlineeScale           : 0
ProfileInconsistentInlinee                : 0
ProfileInconsistentNoReturnInlinee        : 0
ProfileInconsistentMayThrowInlinee        : 0
NewRefClassHelperCalls                    : 0
StackAllocatedRefClasses                  : 0
NewBoxedValueClassHelperCalls             : 0
StackAllocatedBoxedValueClasses           : 0
NewArrayHelperCalls                       : 0
StackAllocatedArrays                      : 0
LocalAssertionCount                       : 1
LocalAssertionOverflow                    : 0
MorphTrackedLocals                        : 2
MorphLocals                               : 3
EnumeratorGDVProvisionalNoEscape          : 0
EnumeratorGDVCanCloneToEnsureNoEscape     : 0

****** DONE compiling Program:MemoryAccess(int[],int):int
[?1h=2
